{"version":3,"sources":["./src/app/pages/admin/sidebar/sidebar.component.ts","./src/app/pages/admin/sidebar/sidebar.component.html","./src/app/pages/admin/asignacion-rechazo/asignacion-rechazo.component.ts","./src/app/pages/admin/asignacion-rechazo/asignacion-rechazo.component.html","./src/app/pages/centralizador/centralizador/centralizador.component.ts","./src/app/pages/centralizador/centralizador/centralizador.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/centralizador/centralizador-sidebar/centralizador-sidebar.component.ts","./src/app/pages/centralizador/centralizador-sidebar/centralizador-sidebar.component.html","./src/app/services/reglas-negocio.service.ts","./src/app/utils/material.module.ts","./src/app/pages/admin/puntos-atencion/puntos-atencion.component.ts","./src/app/pages/admin/puntos-atencion/puntos-atencion.component.html","./src/app/pages/operador/operador-dashboard/operador-dashboard.component.ts","./src/app/pages/operador/operador-dashboard/operador-dashboard.component.html","./src/app/services/uploadFileService.service.ts","./src/app/services/auth.interceptor.ts","./src/environments/environment.ts","./src/app/services/usuario.guard.ts","./src/app/pages/user/user-sidebar/user-sidebar.component.ts","./src/app/pages/user/user-sidebar/user-sidebar.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/admin/administracion-usuarios/administracion-usuarios.component.ts","./src/app/pages/admin/administracion-usuarios/administracion-usuarios.component.html","./src/app/services/login.service.ts","./src/app/services/centralizador.guard.ts","./src/app/utils/spanish-paginator.ts","./src/app/pages/cuentahabiente/cuentahabiente-dashboard/cuentahabiente-dashboard.component.ts","./src/app/pages/cuentahabiente/cuentahabiente-dashboard/cuentahabiente-dashboard.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/centralizador/analisis/analisis.component.ts","./src/app/pages/centralizador/analisis/analisis.component.html","./src/app/services/operador.guard.ts","./src/app/pages/cuentahabiente/cuentahabiente-sidebar/cuentahabiente-sidebar.component.ts","./src/app/pages/cuentahabiente/cuentahabiente-sidebar/cuentahabiente-sidebar.component.html","./src/app/app.module.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.html","./src/app/pages/operador/operador-sidebar/operador-sidebar.component.ts","./src/app/pages/operador/operador-sidebar/operador-sidebar.component.html","./src/app/services/admin.guard.ts","./src/app/pages/user/consulta-usuario/consulta-usuario.component.ts","./src/app/pages/user/consulta-usuario/consulta-usuario.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/pages/operador/operador/operador.component.ts","./src/app/pages/operador/operador/operador.component.html","./src/app/pages/cuentahabiente/cuentahabiente-queja/cuentahabiente-queja.component.ts","./src/app/pages/cuentahabiente/cuentahabiente-queja/cuentahabiente-queja.component.html","./src/app/services/helper.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/services/cuentahabiente.guard.ts","./src/app/pages/user/quejas-usuario/quejas-usuario.component.ts","./src/app/pages/user/quejas-usuario/quejas-usuario.component.html","./src/app/services/user.service.ts","./src/app/pages/admin/dashboard/dashboard.component.ts","./src/app/pages/admin/dashboard/dashboard.component.html","./src/app/services/service.service.ts","./src/app/pages/admin/usuarios-punto-atencion/usuarios-punto-atencion.component.ts","./src/app/pages/admin/usuarios-punto-atencion/usuarios-punto-atencion.component.html","./src/app/pages/admin/usuarios-atencion/usuarios-atencion.component.ts","./src/app/pages/admin/usuarios-atencion/usuarios-atencion.component.html","./src/app/app-routing.module.ts","./src/app/pages/centralizador/centralizador-dashboard/centralizador-dashboard.component.ts","./src/app/pages/centralizador/centralizador-dashboard/centralizador-dashboard.component.html","./src/app/pages/admin/tipo-quejas/tipo-quejas.component.ts","./src/app/pages/admin/tipo-quejas/tipo-quejas.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(public login:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  public logout(){\n    this.login.logout();\n    window.location.reload();\n  }\n}\n","<mat-card>\n    <mat-action-list>\n        <div mat-subheader>Menu</div>\n        <!-- <button routerLink=\"/admin\" mat-list-item>\n            <mat-icon mat-list-icon>home</mat-icon>Inicio\n        </button> -->\n        <button mat-list-item routerLink = \"/admin/puntos-atencion\">\n            <mat-icon mat-list-icon >store</mat-icon>Puntos de Atencion \n        </button>\n        <button mat-list-item routerLink = \"/admin/usuarios-punto-atencion\">\n            <mat-icon mat-list-icon >account_circle</mat-icon>Usuarios de puntos de atencion\n        </button>\n        <button mat-list-item routerLink = \"/admin/admin-usuarios\">\n            <mat-icon mat-list-icon >supervised_user_circle</mat-icon>Administración de usuarios\n        </button>\n        <button mat-list-item routerLink = \"/admin/tipo-quejas\">\n            <mat-icon mat-list-icon >format_shapes</mat-icon>Tipo de Queja\n        </button>\n        <button mat-list-item (click)=\"logout()\">\n            <mat-icon mat-list-icon >logout</mat-icon>Salir\n        </button>\n    </mat-action-list>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-asignacion-rechazo',\n  templateUrl: './asignacion-rechazo.component.html',\n  styleUrls: ['./asignacion-rechazo.component.css']\n})\nexport class AsignacionRechazoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>asignacion-rechazo works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ReglasNegocioService } from 'src/app/services/reglas-negocio.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { UploadFileService } from 'src/app/services/uploadFileService.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-centralizador',\n  templateUrl: './centralizador.component.html',\n  styleUrls: ['./centralizador.component.css']\n})\nexport class CentralizadorComponent implements OnInit {\n\n  idQueja: any;\n  asignar: any;\n  detalleQueja: any;\n  user: any = null;\n  isLoggedIn = false;\n  ipUsuario: string;\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'correlativo',\n    'fechaHora',\n    'accion'\n  ];\n\n\n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private uploadFileService: UploadFileService,\n    public reglasNegocio: ReglasNegocioService\n  ) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n      }\n    )\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n    });\n    this.obtenerEventos();\n    this.spinner.hide();\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  obtenerEventos() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'queja/centralizador').toPromise().then(data => {\n      console.log(data);\n      this.dataSourceEventos.sort = this.sort;\n      this.dataSourceEventos = new MatTableDataSource(data);\n      this.dataSourceEventos.paginator = this.paginator;\n    });\n  }\n\n  async obtenerQuejaById(id: number) {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/byId/${id}`).toPromise().then(data => {\n      this.detalleQueja = data;\n\n    });\n  }\n\n\n\n  async asignacion() {\n    //console.log('??',this.detalleQueja.codigoQueja);\n    Swal.fire({\n      showCloseButton: true,\n      title: '¿Está seguro de asignar la queja?',\n      text: 'Esta seguro de asignar la solicitud de queja',\n      showDenyButton: true,\n      denyButtonText: \"Cancelar\",\n      confirmButtonText: \"Aprobar\",\n      allowEscapeKey: false,\n      allowOutsideClick: false\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        /* await this.obtenerQuejaById(this.idQueja); */\n        this.asignar = {\n          solicitud: [this.detalleQueja.codigoQueja],\n          complemento: 1\n        };\n        console.log(this.asignar);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/asignar', this.asignar).toPromise().then(data => {\n          Swal.fire({\n            title: 'Asignada!',\n            text: 'La queja ha sido asignada',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1500\n          }).then(() => {\n            this.obtenerEventos();\n            this.detalleQueja = null;\n          });\n        });\n      }\n    })\n  }\n\n  async rechazar() {\n    Swal.fire({\n      showCloseButton: true,\n      title: '¿Está seguro de rechazar la queja?',\n      text: 'Esta seguro de rechazar la solicitud de queja',\n      showDenyButton: true,\n      denyButtonText: \"Cancelar\",\n      confirmButtonText: \"Rechazar\",\n      allowEscapeKey: false,\n      allowOutsideClick: false, \n      input: 'text',\n      inputPlaceholder: 'Ingrese el motivo de rechazo',\n      inputValidator(validarJustifiacion){\n        return !validarJustifiacion && 'Debe ingresar el motivo de rechazo'\n      },\n    }).then(async (validarJustifiacion) => {\n      if (validarJustifiacion.isConfirmed) {\n        const justificacion = validarJustifiacion.value;\n        this.asignar = {\n          solicitud: [this.detalleQueja.codigoQueja],\n          complemento: 2,\n          justificacion: justificacion\n        };\n        console.log(this.asignar);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/asignar', this.asignar).toPromise().then(data => {\n          Swal.fire({\n            title: 'Rechazada!',\n            text: 'La queja ha sido rechazada',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1500\n          }).then(() => {\n            this.obtenerEventos();\n            this.detalleQueja = null;\n          });\n        });\n      }\n    })\n  }\n}\n","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Ingreso </mat-card-title>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"container-fluid\">\n        <mat-form-field>\n            <mat-label>Busqueda</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"correlativo\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Correlativo </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.correlativo}} </td>\n                </ng-container>\n\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"fechaHora\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Fecha y Hora </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.fechaHora | date: 'dd/MM/yyyy HH:mm:ss'}} </td>\n                </ng-container>\n\n\n\n                <!-- Columna Acción -->\n                <ng-container matColumnDef=\"accion\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Administrar </th>\n                    <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n                        <span class=\"material-icons\" title=\"Ver más\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                            data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\"\n                            style=\"cursor: pointer;\">visibility</span>\n                        <span class=\"material-icons\" title=\"Asignar\" data-toggle=\"modal\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                              (click)=\"asignacion()\"\n                            style=\"cursor: pointer;\">edit</span>\n                        <span class=\"material-icons\" title=\"No aplica\" data-toggle=\"modal\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                              (click)=\"rechazar()\"\n                            style=\"cursor: pointer;\">delete</span>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n    </div>\n</div>\n\n\n\n\n<!-- Button trigger modal -->\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Detalle Queja</h1>\n                <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\n            </div>\n            <div class=\"modal-body\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Correlativo</mat-label>\n                                <input matInput [value]=\"detalleQueja?.correlativo\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Fecha Solicitud</mat-label>\n                                <input matInput [value]=\"detalleQueja?.fechaAgrega | date: 'dd/MM/yyyy'\" disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Detalle Queja</mat-label>\n                                <input matInput [value]=\"detalleQueja?.detalleQueja\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <a href=\"{{detalleQueja?.documentoSoporte}}\" target=\"_blank\" download>Descargar PDF</a>\n                        </div>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Aceptar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Detalle Queja</h1>\n                <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\n            </div>\n            <div class=\"modal-body\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Correlativo</mat-label>\n                                <input matInput [value]=\"detalleQueja?.correlativo\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Fecha Solicitud</mat-label>\n                                <input matInput [value]=\"detalleQueja?.fechaAgrega | date: 'dd/MM/yyyy'\" disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Detalle Queja</mat-label>\n                                <input matInput [value]=\"detalleQueja?.detalleQueja\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <a href=\"{{detalleQueja?.documentoSoporte}}\" target=\"_blank\" download>Descargar PDF</a>\n                        </div>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Aceptar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"boostrap-wrapper\">\n    <div class=\"container\">\n        <div class=\"row mt20\">\n            <div class=\"col-md-6 offset-md-3 text-center\">\n                <h1>Bienvenido al banco pistio</h1>\n                <h2>Sistema de Quejas</h2>\n            </div>\n        </div>\n        <div>\n            <p>El sistema de quejas sirve para recibir quejas, realizar quejas, comentarios y sugerencias de los usuarios al banco el pistio\n                y asi poder mejorar la calidad de servicio y la experiencia de los usuarios.\n            </p>\n        </div>\n        \n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-centralizador-sidebar',\n  templateUrl: './centralizador-sidebar.component.html',\n  styles: [\n  ]\n})\nexport class CentralizadorSidebarComponent implements OnInit {\n\n  constructor(public login:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n  public logout(){\n    this.login.logout();\n    window.location.reload();\n  }\n\n}\n","<mat-card>\n    <mat-action-list>\n        <div mat-subheader>Centralizador</div>\n        <button mat-list-item routerLink = \"/centralizador-dashboard/centralizador\">\n            <mat-icon mat-list-icon >face</mat-icon>Quejas Ingresadas\n        </button>\n\n        <button mat-list-item routerLink = \"/centralizador-dashboard/analizador\">\n            <mat-icon mat-list-icon >find_in_page</mat-icon>Quejas Asignadas\n        </button>\n        <button mat-list-item (click)=\"logout()\">\n            <mat-icon mat-list-icon >logout</mat-icon>Salir\n        </button>\n    </mat-action-list>\n</mat-card>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReglasNegocioService {\n\n  constructor() { }\n\n\n  /* Metodo para validar numeros \n  @e evento ejecutado desde la vista */\n  public soloNumeros(e) {\n    const key: any = e.keyCode || e.which;\n    const teclado: any = String.fromCharCode(key);\n    const especiales: any = '8';\n    const numero: any = '0123456789';\n    let teclado_especial: boolean = false;\n\n    for (const i in especiales) {\n      if (key === especiales[i]) {\n        teclado_especial = true;\n      }\n    }\n    if (numero.indexOf(teclado) === -1 && !teclado_especial) {\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule, MAT_DATE_LOCALE, MAT_DATE_FORMATS, DateAdapter } from '@angular/material/core';\nimport {MatPaginatorModule, MatPaginatorIntl} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { CustomPaginator } from './spanish-paginator';\nimport { MatTimepickerModule } from 'mat-timepicker';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    BrowserAnimationsModule,\n    MatStepperModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatSortModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatProgressBarModule,\n    NgxSpinnerModule,\n    MatDividerModule,\n    CommonModule,\n    MatFormFieldModule,\n    MatTimepickerModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: MAT_RADIO_DEFAULT_OPTIONS, useValue: { color: 'accent' } },\n    { provide: MatPaginatorIntl, useValue: CustomPaginator() },\n    { provide: MAT_DATE_LOCALE, useValue: 'es' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n],\n})\nexport class MaterialModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as moment from 'moment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable } from 'rxjs';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport Swal from 'sweetalert2';\nimport { map, startWith } from 'rxjs/operators';\ndeclare let $: any;\n\n\n@Component({\n  selector: 'app-puntos-atencion',\n  templateUrl: './puntos-atencion.component.html',\n  styleUrls: ['./puntos-atencion.component.css']\n})\n\nexport class PuntosAtencionComponent implements OnInit {\n\n\n  row: any;\n  eliminar: any;\n  solicitud:any = [];\n  cantidad: any;\n  eliminacion: any;\n  PatencionForm: FormGroup;\n  estadoatencion: any;\n  atencion: any;\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'codigoAtencionId',\n    'regionPatencion',\n    'nombrePatencion',\n    'accion'\n  ];\n  solicitudes: any;\n  user: any = null;\n  isLoggedIn = false;\n  ipUsuario: string;\n  regiones: any = [];\n  detalleEvento: any;\n  regionModifica: any;\n  habilitarEdicion: boolean = true;\n  region: any;\n\n  estadoPatencion = new FormControl('');\n  constructor(private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,) {\n    this.PatencionForm = new FormGroup({\n      nombreAtencion: new FormControl('', Validators.required),\n      regionAtencion: new FormControl('', Validators.required),\n      estadoAtencion: new FormControl(''),\n    });\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.obtenerRegion();\n\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n      }\n    )\n\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n      console.log(res);\n    })\n    this.obtenerPuntosAtencion();\n    this.spinner.hide();\n\n  }\n\n\n  obtenerPuntosAtencion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'patencion/listar').toPromise().then(data => {\n      this.atencion = data;\n      this.estadoatencion = this.atencion.estado == 1 ? 'Activo' : 'Inactivo';\n      this.dataSourceEventos = new MatTableDataSource(data);\n      this.dataSourceEventos.paginator = this.paginator;\n      this.dataSourceEventos.sort = this.sort;\n      console.log(data);\n      this.spinner.hide();\n    });\n  }\n\n  obtenerRegion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'catalogos/regiones').toPromise().then(data => {\n      this.regiones = data;\n      console.log(data);\n      this.spinner.hide();\n    });\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  async guardarPuntoAtencion(data: any) {\n    this.spinner.show();\n    const guardarAtencion = {\n      nombrePatencion: data.nombreAtencion,\n      regionPatencion: data.regionAtencion,\n      estado: 1,\n      usuarioAgrega: this.user.username,\n      ipUsuarioAgrega: this.ipUsuario,\n      fechaAgrega: Number(moment()),\n    }\n    console.log(guardarAtencion)\n    await this.service.postData(this.service.BASE_URL_QUEJAS, 'patencion/crear', guardarAtencion).toPromise().then(data => {\n      this.obtenerPuntosAtencion();\n      this.spinner.hide();\n      Swal.fire({\n        titleText: `Se guardaron correctamente los datos del punto de\n        atención`,\n        icon: 'success',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n      return data;\n    }).catch(err => {\n      console.error(err);\n      this.spinner.hide();\n      Swal.fire({\n        titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n        icon: 'error',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    });\n  }\n\n\n  obtenerDetalleEvento(id: number) {\n    this.spinner.show();\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `patencion/${id}`).toPromise().then(data => {\n      this.detalleEvento = data;\n      this.PatencionForm.get('nombreAtencion')?.setValue(this.detalleEvento.nombrePatencion);\n      this.PatencionForm.get('regionAtencion')?.setValue(this.detalleEvento.regionPatencion);\n      this.PatencionForm.get('estadoAtencion')?.setValue(this.detalleEvento.estado);\n      this.detalleEvento.estado == 1 ? true : false;\n      if (this.detalleEvento.regionPatencion == 1) {\n        this.region = 'Región Central'\n      } else if (this.detalleEvento.regionPatencion == 2) {\n        this.region = 'Región Sur'\n      } else if (this.detalleEvento.regionPatencion == 3) {\n        this.region = 'Región Nororiente'\n      } else if (this.detalleEvento.regionPatencion == 4) {\n        this.region = 'Región Occidente'\n      }\n      //console.log('estado', this.detalleEvento.estado);\n      console.log(data);\n      this.spinner.hide();\n    });\n  }\n\n  obtenerEstadoPatencion(event: any) {\n    console.log('region1', this.detalleEvento.regionPatencion)\n    let region = this.detalleEvento.codigoAtencionId;\n    console.log('region2', this.region)\n    console.log('region3', region)\n    let estado = event.checked == true ? 1 : 2;\n    console.log('estado', estado);\n    if (estado == 2) {\n      this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `upatencion/cantidad/${region}`).toPromise().then(data => {\n        this.eliminacion = data;\n        this.cantidad = this.eliminacion.cantidad;\n        console.log('eliminacion', this.cantidad);\n        Swal.fire({\n          title: 'Esta seguro de la eliminación?',\n          text: `Se eliminará la cantidad de ${this.cantidad} usuario${this.cantidad != 1 ? \"s\" : \"\"} asociado${this.cantidad != 1 ? \"s\" : \"\"} a la ${this.region}`,\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Si, Eliminar!',\n          allowOutsideClick: false\n        }).then((result) => {\n          if (result.isConfirmed) {\n            this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `upatencion/solicitud/${this.detalleEvento.codigoAtencionId}`).toPromise().then(data => {\n              this.solicitudes = data;\n              console.log(this.solicitudes);\n              this.solicitudes.forEach((element: any) => {\n                return this.solicitud.push(element?.codigoUsuarioPunto);\n              });\n              console.log('solicitud', this.solicitud.toString());\n              const solicitudesEliminar = {\n                pCodigo: this.solicitud\n              }\n              console.log('solicitudesEliminar', solicitudesEliminar);\n               this.service.postData(this.service.BASE_URL_QUEJAS, 'upatencion/estadosm', (solicitudesEliminar)).toPromise().then(data => {\n              });\n              this.spinner.hide();\n            })\n          }\n        })\n      });\n\n    }\n  }\n\n\n\n  limpiarFormulario() {\n    this.PatencionForm.reset();\n  }\n\n  modificarPatencion() {\n    this.spinner.show();\n    const modificarPatencion = {\n      codigoAtencionId: this.detalleEvento.codigoAtencionId,\n      nombrePatencion: this.PatencionForm.get('nombreAtencion')?.value,\n      regionPatencion: this.PatencionForm.get('regionAtencion')?.value,\n      estado: this.PatencionForm.get('estadoAtencion')?.value ? 1 : 2,\n      usuarioAgrega: this.user.username,\n      ipUsuarioAgrega: this.ipUsuario,\n      fechaAgrega: Number(moment()),\n    }\n    console.log('modificar', modificarPatencion);\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'patencion/modificar/pa', modificarPatencion).toPromise().then(data => {\n      this.obtenerPuntosAtencion();\n      this.spinner.hide();\n      Swal.fire({\n        titleText: `Datos actualizados`,\n        icon: 'success',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n      return data;\n    }).catch(err => {\n      console.error(err);\n      this.spinner.hide();\n      Swal.fire({\n        titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n        icon: 'error',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    });\n  }\n\n\n  esEmailValido(email: string): boolean {\n    let mailValido = false;\n    'use strict';\n\n    var EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (email.match(EMAIL_REGEX)) {\n      mailValido = true;\n    }\n    return mailValido;\n  }\n}\n\n\n\n","<div class=\"card-body \">\n  <mat-card-title class=\"titulo\"> Puntos de Atencion </mat-card-title>\n\n\n  <!-- Button trigger Ingreso de Informacion -->\n  <button mat-raised-button type=\"button\" class=\"botones mt-4 mb-4\" data-bs-toggle=\"modal\"\n    data-bs-target=\"#staticAgregar\">\n    <mat-icon>add_circle_outline</mat-icon>\n    Punto atencion\n  </button>\n\n</div>\n \n<br>\n<div class=\"container-fluid\">\n  <mat-form-field>\n    <mat-label>Busqueda</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n  </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n\n      <!-- Column ID punto de atención -->\n      <ng-container matColumnDef=\"codigoAtencionId\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> ID </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.codigoAtencionId}} </td>\n      </ng-container>\n\n      <!--Column region de atención-->\n      <ng-container matColumnDef=\"regionPatencion\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Región de Atención </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.regionPatencion}}</td>\n      </ng-container>\n\n      <!-- Column nombre punto de atención-->\n      <ng-container matColumnDef=\"nombrePatencion\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Nombre punto <br>de Atención </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.nombrePatencion}} </td>\n      </ng-container>\n\n     \n\n      <!-- Columna Acción -->\n      <ng-container matColumnDef=\"accion\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Acción </th>\n        <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n          <span class=\"material-icons\" title=\"Ver más\" (click)=\"obtenerDetalleEvento(evento.codigoAtencionId)\"\n            data-bs-toggle=\"modal\" data-bs-target=\"#staticDetalleEventos\" style=\"cursor: pointer;\">visibility</span>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n  </div>\n</div>\n\n\n<!-- Agregar punto de atención -->\n<div class=\"modal fade\" id=\"staticAgregar\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header titulo\">\n        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Agregar Punto de Atención</h5>\n        <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"PatencionForm\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Regiones</mat-label>\n                <mat-select formControlName=\"regionAtencion\">\n                  <mat-option *ngFor=\"let regiones of regiones\" [value]=\"regiones.codigoRegionalId\">\n                    {{regiones.nombreRegion}}\n                  </mat-option>\n\n                </mat-select>\n                <mat-error *ngIf=\"PatencionForm.controls.regionAtencion.hasError('required')\">\n                  La región de atención es requerida\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-6\">\n              <mat-form-field class=\"full-width\" appearance=\"outline\">\n                <mat-label>Nombre punto de atención</mat-label>\n                <input matInput formControlName=\"nombreAtencion\" matInput placeholder=\"Nombre del punto de atención\"\n                  maxlength=\"100\" autocomplete=\"off\">\n                <mat-hint align=\"end\">{{PatencionForm.controls.nombreAtencion.value?.length || 0}}/100</mat-hint>\n                <mat-error *ngIf=\"PatencionForm.controls.nombreAtencion.hasError('required')\">\n                  El nombre del punto de atención es requerido\n                </mat-error>\n                <!-- <mat-hint>El nombre de usuario debe ser único</mat-hint> -->\n\n              </mat-form-field>\n            </div>\n\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btnCancelar\" (click)=\"limpiarFormulario()\"\n          data-bs-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"guardarPuntoAtencion(PatencionForm.value);limpiarFormulario()\"\n          [disabled]=\"PatencionForm.invalid\" class=\"btn btn-primary\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- Modificar Punto de atención -->\n<div class=\"modal fade\" id=\"staticDetalleEventos\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header titulo\">\n        <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Modificar Punto de Atención</h1>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"PatencionForm\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Regiones</mat-label>\n                <mat-select formControlName=\"regionAtencion\">\n                  <mat-option *ngFor=\"let region of regiones\" [value]=\"region.codigoRegionalId\" disabled=\"true\">\n                    {{region.nombreRegion}}\n                  </mat-option>\n\n                </mat-select>\n                <mat-error *ngIf=\"PatencionForm.controls.regionAtencion.hasError('required')\">\n                  La región de atención es requerida\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-6\">\n              <mat-form-field class=\"full-width\" appearance=\"outline\">\n                <mat-label>Nombre punto de atención</mat-label>\n                <input formControlName=\"nombreAtencion\" matInput [value]=\"detalleEvento?.nombrePatencion\"\n                  placeholder=\"Nombre del punto de atención\" maxlength=\"100\" autocomplete=\"off\">\n                <!-- <mat-hint align=\"end\">{{nPatencion.value.length}} / 100</mat-hint> -->\n              </mat-form-field>\n\n              <!-- <mat-form-field class=\"col\">\n                <mat-label>Codigo modalidad compra</mat-label>\n                <input matInput [value]=\"detalleEvento?.modalidad\" disabled=true>\n              </mat-form-field> -->\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-10\">\n              <mat-label>Estado</mat-label>\n              <div class=\"col-6\">\n                  <mat-slide-toggle color=\"primary\" #estado (change)=\"obtenerEstadoPatencion($event)\" formControlName=\"estadoAtencion\">{{estado.checked?\n                      'Activo' :\n                      'Inactivo'}}</mat-slide-toggle>\n              </div>\n          </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"limpiarFormulario()\"\n          data-bs-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\"\n          (click)=\"modificarPatencion()\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operador-dashboard',\n  templateUrl: './operador-dashboard.component.html',\n  styles: [\n  ]\n})\nexport class OperadorDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <app-operador-sidebar></app-operador-sidebar>\n        </div>\n        <div class=\"col-md-9\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n\n  constructor() { }\n\n  subirArchivo(archivo: File, carpeta: string) {\n    return new Promise((resolve, reject) => {\n      let formData = new FormData();\n      let xhr = new XMLHttpRequest();\n\n      formData.append('file', archivo, archivo.name);\n      formData.append('folder', carpeta);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            resolve(JSON.parse(xhr.response));\n          } else {\n            reject(xhr.response);\n          }\n        }\n      };\n      let url = 'https://api.cloudinary.com/v1_1/dwggq6q2f/auto/upload?upload_preset=gaktp4f6';\n      xhr.open('POST', url, true);\n      xhr.send(formData);\n    });\n  }\n  \n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n\r\n    constructor(private loginService: LoginService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.loginService.isLoggedIn()) {\r\n            const authToken = this.loginService.getToken();\r\n            const authReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n            });\r\n            return next.handle(authReq);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}\r\n\r\nexport const authInterceptorProviders = [ \r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: AuthInterceptor,\r\n        multi: true\r\n    }\r\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BASE_URL_QUEJAS: 'https://quejas-81f3f2221b01.herokuapp.com',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioGuard implements CanActivate {\n\n  constructor(private loginService:LoginService,private router:Router){\n\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.loginService.isLoggedIn() && this.loginService.getUserRol() == 'USUARIO'){\n        return true;\n      }\n  \n      this.router.navigate(['login']);\n      return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-user-sidebar',\n  templateUrl: './user-sidebar.component.html',\n  styleUrls: ['./user-sidebar.component.css']\n})\nexport class UserSidebarComponent implements OnInit {\n\n  constructor(public login:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  public logout(){\n    this.login.logout();\n    window.location.reload();\n  }\n}\n","<mat-card>\n    <mat-action-list>\n        <div mat-subheader>Usuario</div>\n        <button mat-list-item routerLink = \"/user-dashboard/usuario\">\n            <mat-icon mat-list-icon >event</mat-icon>Quejas \n        </button>\n        <button mat-list-item routerLink = \"/user-dashboard/consulta\">\n            <mat-icon mat-list-icon >insert_drive_file</mat-icon>Consulta Usuario\n        </button>\n        <button mat-list-item (click)=\"logout()\">\n            <mat-icon mat-list-icon >logout</mat-icon>Salir\n        </button>\n    </mat-action-list>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginData = {\n    \"username\": \"\",\n    \"password\": \"\"\n  }\n\n  constructor(private snack: MatSnackBar,\n    private loginService: LoginService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  formSubmit() {\n    if (this.loginData.username.trim() == '' || this.loginData.username.trim() == '') {\n      this.snack.open(\"Username is empty\", \"OK\", {\n        duration: 3000\n      });\n      return;\n    }\n\n    if (this.loginData.password.trim() == '' || this.loginData.password.trim() == '') {\n      this.snack.open(\"Password is empty\", \"OK\", {\n        duration: 3000\n      });\n      return;\n    }\n\n    this.loginService.generateToken(this.loginData).subscribe(\n      (data: any) => {\n        //console.log(data);\n        this.loginService.login(data.token);\n        this.loginService.getCurrentUser().subscribe(\n          (user: any) => {\n            console.log(user);\n            this.loginService.setUser(user);\n            \n            if (this.loginService.getUserRol() == 'ADMIN') {\n              this.router.navigate(['admin']);\n              this.loginService.loginStatusSubjec.next(true);\n\n            } else if (this.loginService.getUserRol() == 'USUARIO') {\n              this.router.navigate(['user-dashboard']);\n              this.loginService.loginStatusSubjec.next(true);\n            }else if(this.loginService.getUserRol() == 'CUENTAHABIENTE'){\n              this.router.navigate(['cuentahabiente-dashboard']);\n              this.loginService.loginStatusSubjec.next(true);\n            }else if(this.loginService.getUserRol() == 'CENTRALIZADOR'){\n              this.router.navigate(['centralizador-dashboard']);\n              this.loginService.loginStatusSubjec.next(true);\n            }else if(this.loginService.getUserRol() == 'OPERADOR'){\n              this.router.navigate(['operador-dashboard']);\n              this.loginService.loginStatusSubjec.next(true);\n            } else {\n              this.snack.open(\"Usario no encontrado\", \"OK\", {\n                duration: 3000\n              });\n              this.loginService.logout();\n            }\n          }\n        );\n      }, (error) => {\n        console.log(error);\n        this.snack.open(\"Datos invalidos, vuelva a intentar\", \"OK\", {\n          duration: 3000\n        });\n      }\n    );\n  }\n\n  \n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container\">\n        <div class=\"row mt20\">\n            <div class=\"col-md-6 offset-md-3\">\n                <mat-card>\n                    <div class=\"container text-center\">\n                        <img src=\"../../../assets/sesion.png\" width=\"100\" height=\"100\" />\n                    </div>\n                    <h1 class=\"text-center\">Inicio de sesión</h1>\n                    <form (ngSubmit)=\"formSubmit()\">\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Nombre de usuario</mat-label>\n                            <input [(ngModel)]=\"loginData.username\" required  name=\"username\" matInput\n                              placeholder=\"Digite su nombre de usuario\">\n                            <mat-hint>El nombre de usuario debe ser único</mat-hint>\n                          </mat-form-field>\n                \n                          <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Contraseña</mat-label>\n                            <input [(ngModel)]=\"loginData.password\" required  name=\"password\" type=\"password\" matInput\n                              placeholder=\"Digite su contraseña\">\n                              <mat-hint>La contraseña debe tener al menos 8 caracteres</mat-hint>\n                          </mat-form-field>\n\n                          <div class=\"container text-center\">\n                            <button mat-raised-button color=\"primary\">Iniciar sesión</button>\n                            <button type=\"reset\" type=\"reset\" style=\"margin-left: 20px;\" mat-raised-button\n                              color=\"warn\">Cancelar</button>\n                          </div>\n                    </form>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administracion-usuarios',\n  templateUrl: './administracion-usuarios.component.html',\n  styleUrls: ['./administracion-usuarios.component.css']\n})\nexport class AdministracionUsuariosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Administración de Usuarios </mat-card-title>\n  \n  \n    <!-- Button trigger Ingreso de Informacion -->\n    <button mat-raised-button type=\"button\" class=\"botones mt-4 mb-4\" data-bs-toggle=\"modal\"\n      data-bs-target=\"#staticAgregar\">\n      <mat-icon>add_circle_outline</mat-icon>\n      Punto atencion\n    </button>\n  \n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport baserUrl from './helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  public loginStatusSubjec = new Subject<boolean>();\n\n  constructor(private http: HttpClient) { }\n\n  //generar el token\n  public generateToken(loginData: any) {\n    return this.http.post(`${baserUrl}/generate-token`, loginData);\n  }\n\n  //Iniciar sesión y establecer el token en el localStorage\n  public login(token: any) {\n    localStorage.setItem('token', token);\n    return true;\n  }\n\n  public isLoggedIn() {\n    let tokenStr = localStorage.getItem('token');\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //cerrar sesión y eliminar el token del localStorage\n  public logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return true;\n  }\n\n  //obtener el token del localStorage\n  public getToken() {\n    return localStorage.getItem('token');\n  }\n\n  //obtener el usuario del localStorage\n  public setUser(user: any) {\n    localStorage.setItem('user', JSON.stringify(user));\n    return true;\n  }\n    \n  public getUser() {\n    let userStr = localStorage.getItem('user');\n    if (userStr != null) {\n      return JSON.parse(userStr);\n    } else {\n      this.logout();\n      return null;\n    }\n  }\n\n  public getUserRol() {\n    let user = this.getUser();\n    return user.authorities[0].authority;\n  }\n\n\n  public getCurrentUser() {\n    return this.http.get(`${baserUrl}/actual-usuario`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CentralizadorGuard implements CanActivate {\n  constructor(private loginService:LoginService,private router:Router){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.loginService.isLoggedIn() && this.loginService.getUserRol() == 'CENTRALIZADOR'){\n        return true;\n      }\n\n      this.router.navigate(['login']);\n      return false;\n  }\n  \n\n}\n","import { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\nconst spanishRangeLabel = (page: number, pageSize: number, length: number) => {\r\n  if (length === 0 || pageSize === 0) { return `0 de ${length}`; }\r\n  length = Math.max(length, 0);\r\n  const startIndex = page * pageSize;\r\n\r\n  // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n  const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n\r\n  return `${startIndex + 1} - ${endIndex} de ${length}`;\r\n};\r\n\r\n\r\nexport function CustomPaginator() {\r\n  const paginatorIntl = new MatPaginatorIntl();\r\n\r\n  paginatorIntl.itemsPerPageLabel = 'Registros por página';\r\n  paginatorIntl.firstPageLabel = 'Primera página';\r\n  paginatorIntl.lastPageLabel = 'Última página';\r\n  paginatorIntl.nextPageLabel = 'Siguiente página';\r\n  paginatorIntl.previousPageLabel = 'Página anterior';\r\n  paginatorIntl.getRangeLabel = spanishRangeLabel;\r\n\r\n  return paginatorIntl;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cuentahabiente-dashboard',\n  templateUrl: './cuentahabiente-dashboard.component.html',\n  styleUrls: ['./cuentahabiente-dashboard.component.css']\n})\nexport class CuentahabienteDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <app-cuentahabiente-sidebar></app-cuentahabiente-sidebar>\n        </div>\n        <div class=\"col-md-9\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sistema-quejas-frontend';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ReglasNegocioService } from 'src/app/services/reglas-negocio.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { UploadFileService } from 'src/app/services/uploadFileService.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-analisis',\n  templateUrl: './analisis.component.html',\n  styleUrls: ['./analisis.component.css']\n})\nexport class AnalisisComponent implements OnInit {\n\n\n  asignar: any;\n  detalleQueja: any;\n  user: any = null;\n  isLoggedIn = false;\n  ipUsuario: string;\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'correlativo',\n    'codigoEtapa',\n    'detalleQueja',\n    'accion'\n  ];\n\n\n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private uploadFileService: UploadFileService,\n    public reglasNegocio: ReglasNegocioService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.spinner.show();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n      }\n    )\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n    });\n    this.obtenerEventos();\n    this.spinner.hide();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  obtenerEventos() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'queja/asignadas').toPromise().then(data => {\n      console.log(data);\n      data.forEach(element => {\n        element.codigoEtapa = element.codigoEtapa == 2 ? 'Analisis' : '';\n      });\n      this.dataSourceEventos.sort = this.sort;\n      this.dataSourceEventos = new MatTableDataSource(data);\n      this.dataSourceEventos.paginator = this.paginator;\n    });\n  }\n\n\n  async obtenerQuejaById(id?: number) {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/byId/${id}`).toPromise().then(data => {\n      this.detalleQueja = data;\n      console.log(this.detalleQueja);\n      /* this.detalleQueja.forEach(element => {\n        element.codigoEtapa = element?.codigoEtapa == 2 ? 'Analisis' : '';\n      }); */\n    });\n  }\n\n  async resolver() {\n    Swal.fire({\n      showCloseButton: true,\n      title: '¿Está seguro de resolver la queja?',\n      text: 'Esta seguro de resolver la solicitud de queja',\n      showDenyButton: true,\n      denyButtonText: \"Cancelar\",\n      confirmButtonText: \"Resolver\",\n      allowEscapeKey: false,\n      allowOutsideClick: false, \n      input: 'text',\n      inputPlaceholder: 'Ingrese el motivo de resolución',\n      inputValidator(validarJustifiacion){\n        return !validarJustifiacion && 'Debe ingresar el motivo de resolución'\n      },\n    }).then(async (validarJustifiacion) => {\n      if (validarJustifiacion.isConfirmed) {\n        const justificacion = validarJustifiacion.value;\n        this.asignar = {\n          solicitud: [this.detalleQueja.codigoQueja],\n          complemento: 3,\n          justificacion: justificacion\n        };\n        console.log(this.asignar);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/asignar', this.asignar).toPromise().then(data => {\n          Swal.fire({\n            title: 'Rechazada!',\n            text: 'La queja ha sido rechazada',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1500\n          }).then(() => {\n            this.obtenerEventos();\n            this.detalleQueja = null;\n          });\n        });\n      }\n    })\n  }\n\n   async rechazar() {\n    Swal.fire({\n      showCloseButton: true,\n      title: '¿Está seguro de rechazar la queja?',\n      text: 'Esta seguro de rechazar la solicitud de queja',\n      showDenyButton: true,\n      denyButtonText: \"Cancelar\",\n      confirmButtonText: \"Rechazar\",\n      allowEscapeKey: false,\n      allowOutsideClick: false, \n      input: 'text',\n      inputPlaceholder: 'Ingrese el motivo de rechazo',\n      inputValidator(validarJustifiacion){\n        return !validarJustifiacion && 'Debe ingresar el motivo de rechazo'\n      },\n    }).then(async (validarJustifiacion) => {\n      if (validarJustifiacion.isConfirmed) {\n        const justificacion = validarJustifiacion.value;\n        this.asignar = {\n          solicitud: [this.detalleQueja.codigoQueja],\n          complemento: 4,\n          justificacion: justificacion\n        };\n        console.log(this.asignar);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/asignar', this.asignar).toPromise().then(data => {\n          Swal.fire({\n            title: 'Rechazada!',\n            text: 'La queja ha sido rechazada',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1500\n          }).then(() => {\n            this.obtenerEventos();\n            this.detalleQueja = null;\n          });\n        });\n      }\n    })\n  }\n\n}\n","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Análisis </mat-card-title>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"container-fluid\">\n        <mat-form-field>\n            <mat-label>Busqueda</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"correlativo\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Correlativo </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.correlativo}} </td>\n                </ng-container>\n\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"codigoEtapa\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Etapa </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.codigoEtapa}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"detalleQueja\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Detalle </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.detalleQueja}} </td>\n                </ng-container>\n\n                <!-- Columna Acción -->\n                <ng-container matColumnDef=\"accion\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Administrar </th>\n                    <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n                        <span class=\"material-icons\" title=\"Ver más\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                            data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\"\n                            style=\"cursor: pointer;\">visibility</span>\n                        <span class=\"material-icons\" title=\"Asignar\" data-toggle=\"modal\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                              (click)=\"resolver()\"\n                            style=\"cursor: pointer;\">edit</span>\n                        <span class=\"material-icons\" title=\"No aplica\" data-toggle=\"modal\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                              (click)=\"rechazar()\"\n                            style=\"cursor: pointer;\">delete</span>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Detalle Queja</h1>\n                <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\n            </div>\n            <div class=\"modal-body\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>No. Queja</mat-label>\n                                <input matInput [value]=\"detalleQueja?.codigoQueja\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Justificación</mat-label>\n                                <input matInput [value]=\"detalleQueja?.justificacion\" disabled>\n                            </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Fecha Creacion</mat-label>\n                                <input matInput [value]=\"detalleQueja?.fechaAgrega\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Usuario de Creación</mat-label>\n                                <input matInput [value]=\"detalleQueja?.usuarioAgrega\" disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Detalle Queja</mat-label>\n                                <input matInput [value]=\"detalleQueja?.detalleQueja\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <a href=\"{{detalleQueja?.documentoSoporte}}\" target=\"_blank\" download>Descargar PDF</a>\n                        </div>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Aceptar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperadorGuard implements CanActivate {\n  constructor(private loginService:LoginService,private router:Router){\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.loginService.isLoggedIn() && this.loginService.getUserRol() == 'OPERADOR'){\n        return true;\n      }\n\n      this.router.navigate(['login']);\n      return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-cuentahabiente-sidebar',\n  templateUrl: './cuentahabiente-sidebar.component.html',\n  styles: [\n  ]\n})\nexport class CuentahabienteSidebarComponent implements OnInit {\n\n  constructor(public login:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n  public logout(){\n    this.login.logout();\n    window.location.reload();\n  }\n}\n","<mat-card>\n    <mat-action-list>\n        <div mat-subheader>Cuentahabiente</div>\n        <button mat-list-item routerLink = \"/cuentahabiente-dashboard/cuentahabiente\">\n            <mat-icon mat-list-icon >event</mat-icon>Quejas Cuentahabiente\n        </button>\n        <button mat-list-item (click)=\"logout()\">\n            <mat-icon mat-list-icon >logout</mat-icon>Salir\n        </button>\n    </mat-action-list>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { authInterceptorProviders } from './services/auth.interceptor';\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\nimport { DateAdapter, MatNativeDateModule, MatRippleModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MaterialModule } from './utils/material.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\nimport { CustomPaginator } from './utils/spanish-paginator';\nimport { PuntosAtencionComponent } from './pages/admin/puntos-atencion/puntos-atencion.component';\nimport { UsuariosAtencionComponent } from './pages/admin/usuarios-atencion/usuarios-atencion.component';\nimport { TipoQuejasComponent } from './pages/admin/tipo-quejas/tipo-quejas.component';\nimport { QuejasUsuarioComponent } from './pages/user/quejas-usuario/quejas-usuario.component';\nimport { AsignacionRechazoComponent } from './pages/admin/asignacion-rechazo/asignacion-rechazo.component';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { CommonModule } from '@angular/common';\nimport { MatTimepickerModule } from 'mat-timepicker';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UsuariosPuntoAtencionComponent } from './pages/admin/usuarios-punto-atencion/usuarios-punto-atencion.component';\nimport { AdministracionUsuariosComponent } from './pages/admin/administracion-usuarios/administracion-usuarios.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { CuentahabienteDashboardComponent } from './pages/cuentahabiente/cuentahabiente-dashboard/cuentahabiente-dashboard.component';\nimport { CuentahabienteSidebarComponent } from './pages/cuentahabiente/cuentahabiente-sidebar/cuentahabiente-sidebar.component';\nimport { CuentahabienteQuejaComponent } from './pages/cuentahabiente/cuentahabiente-queja/cuentahabiente-queja.component';\nimport { CentralizadorComponent } from './pages/centralizador/centralizador/centralizador.component';\nimport { CentralizadorDashboardComponent } from './pages/centralizador/centralizador-dashboard/centralizador-dashboard.component';\nimport { CentralizadorSidebarComponent } from './pages/centralizador/centralizador-sidebar/centralizador-sidebar.component';\nimport { OperadorComponent } from './pages/operador/operador/operador.component';\nimport { OperadorDashboardComponent } from './pages/operador/operador-dashboard/operador-dashboard.component';\nimport { OperadorSidebarComponent } from './pages/operador/operador-sidebar/operador-sidebar.component';\nimport { UserSidebarComponent } from './pages/user/user-sidebar/user-sidebar.component';\nimport { ConsultaUsuarioComponent } from './pages/user/consulta-usuario/consulta-usuario.component';\nimport { AnalisisComponent } from './pages/centralizador/analisis/analisis.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    SidebarComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    PuntosAtencionComponent,\n    UsuariosAtencionComponent,\n    TipoQuejasComponent,\n    QuejasUsuarioComponent,\n    AsignacionRechazoComponent,\n    UsuariosPuntoAtencionComponent,\n    AdministracionUsuariosComponent,\n    UserDashboardComponent,\n    CuentahabienteDashboardComponent,\n    CuentahabienteSidebarComponent,\n    CuentahabienteQuejaComponent,\n    CentralizadorComponent,\n    CentralizadorDashboardComponent,\n    CentralizadorSidebarComponent,\n    OperadorComponent,\n    OperadorDashboardComponent,\n    OperadorSidebarComponent,\n    UserSidebarComponent,\n    ConsultaUsuarioComponent,\n    AnalisisComponent\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    BrowserAnimationsModule,\n    MatStepperModule,\n    MatCardModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatSortModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatProgressBarModule,\n    NgxSpinnerModule,\n    MatDividerModule,\n    CommonModule,\n    MatFormFieldModule,\n    MatTimepickerModule\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MaterialModule,\n    HttpClientModule,\n    MatAutocompleteModule,\n    TextMaskModule\n    \n  ],\n  providers: [ authInterceptorProviders,\n    { provide: MAT_RADIO_DEFAULT_OPTIONS, useValue: { color: 'accent' } },\n    //{ provide: MatPaginatorIntl, useValue: CustomPaginator() },\n    { provide: MAT_DATE_LOCALE, useValue: 'es' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <app-user-sidebar></app-user-sidebar>\n      </div>\n      <div class=\"col-md-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-operador-sidebar',\n  templateUrl: './operador-sidebar.component.html',\n  styles: [\n  ]\n})\nexport class OperadorSidebarComponent implements OnInit {\n\n  constructor(public login:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  public logout(){\n    this.login.logout();\n    window.location.reload();\n  }\n\n}\n","<mat-card>\n    <mat-action-list>\n        <div mat-subheader>Operador</div>\n        <button mat-list-item routerLink = \"/operador-dashboard/operador\">\n            <mat-icon mat-list-icon >event</mat-icon>Re-Análisis\n        </button>\n        <button mat-list-item (click)=\"logout()\">\n            <mat-icon mat-list-icon >logout</mat-icon>Salir\n        </button>\n    </mat-action-list>\n</mat-card>","import { LoginService } from './login.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(private loginService:LoginService,private router:Router){\r\n\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if(this.loginService.isLoggedIn() && this.loginService.getUserRol() == 'ADMIN'){\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as moment from 'moment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ReglasNegocioService } from 'src/app/services/reglas-negocio.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { UploadFileService } from 'src/app/services/uploadFileService.service';\nimport Swal from 'sweetalert2';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'YYYY',\n  },\n  display: {\n    dateInput: 'YYYY',\n  },\n};\n\ninterface option {\n  value: string;\n  viewValue: string;\n}\n\n\n\n@Component({\n  selector: 'app-consulta-usuario',\n  templateUrl: './consulta-usuario.component.html',\n  styleUrls: ['./consulta-usuario.component.css'],\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\n\n\nexport class ConsultaUsuarioComponent implements OnInit {\n\n\n  showFilter: boolean = true;\n  showInfo: boolean;\n  anio2: any;\n  qms: any[] = [];\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'correlativo',\n    'anioQueja',\n    'codigoQueja'\n  ];\n  searchForm: FormGroup;\n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private uploadFileService: UploadFileService,\n    public reglasNegocio: ReglasNegocioService\n  ) {\n    this.searchForm = new FormGroup({\n      noQueja: new FormControl('', Validators.required),\n      anioQueja: new FormControl(moment()),\n      tipoQueja: new FormControl('', Validators.required),\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n\n  obtenerQMS() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'tipoQueja/listar').toPromise().then(data => {\n      this.qms = data;\n      console.log(data);\n    });\n  }\n\n\n  public aniFin(normalizedYear: moment.Moment, datepicker: MatDatepicker<moment.Moment>) {\n    const ctrlValue = this.searchForm.get('anioQueja').value;\n    ctrlValue.year(normalizedYear.year());\n    this.searchForm.get('anioQueja').setValue(ctrlValue);\n    this.anio2 = ctrlValue.format('YYYY').toString()\n    datepicker.close();\n  }\n\n  consultar() {\n    this.spinner.show();\n    const consulta = {\n      codigoQueja: this.searchForm.get('noQueja').value,\n      anioQueja: this.anio2,\n      correlativo: '%' + this.searchForm.get('tipoQueja').value + '%'\n    };\n    console.log(consulta);\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/obtenerFiltros', consulta).toPromise().then(data => {\n      console.log(data);\n      this.spinner.hide();\n      this.showInfo = false;\n        if (data.length === 0) {\n          this.showFilter = true;\n          Swal.fire({\n            titleText: `No se encontró información en base a los filtros ingresados.`,\n            icon: 'warning',\n            showCloseButton: true,\n            showConfirmButton: false\n          });\n          this.dataSourceEventos.data = [];\n        } else {\n          this.dataSourceEventos.data = data;\n          setTimeout(() => this.dataSourceEventos.paginator = this.paginator);\n          this.showInfo = true;\n          this.showFilter = false;\n        }\n    });\n  }\n\n}\n","<div class=\"card-body\">\n    <mat-card-title class=\"titulo\"> Consulta Usuario </mat-card-title>\n</div>\n<div class=\"container-fluid top\">\n    \n</div>\n\n\n<div class=\"container-fluid top\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <mat-accordion>\n                <mat-expansion-panel #panel [expanded]=\"true\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title> Filtro de búsqueda </mat-panel-title>\n                        <mat-panel-description></mat-panel-description>\n                    </mat-expansion-panel-header>\n                    <form [formGroup]=\"searchForm\">\n                        <h4>Rango de Fechas:</h4>\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Tipo de Queja</mat-label>\n                                    <input matInput formControlName=\"tipoQueja\" />\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-6\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>No. Queja</mat-label>\n                                    <input matInput formControlName=\"noQueja\" />\n                                </mat-form-field>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <mat-form-field>\n                                    <!-- #filterFecFin-->\n                                    <mat-label>Año Queja: </mat-label>\n                                    <input matInput [matDatepicker]=\"fecFin\" formControlName=\"anioQueja\" readonly>\n                                    <mat-datepicker-toggle matSuffix [for]=\"fecFin\"></mat-datepicker-toggle>\n                                    <mat-datepicker #fecFin startView=\"multi-year\" (yearSelected)=\"aniFin($event,fecFin)\"\n                                      panelClass=\"example-month-picker\">\n                                    </mat-datepicker>\n                                  </mat-form-field>\n                            </div>\n                        </div>\n                    </form>\n\n                    <button mat-raised-button type=\"button\" (click)=\"consultar()\" class=\"botones mt-2 mb-4 ml-2\">\n                        <mat-icon>search</mat-icon>\n                        Buscar\n                    </button>\n\n                    <button mat-raised-button color=\"primary\" class=\"botones\">\n                        <mat-icon>clear</mat-icon>\n                        Limpiar filtro\n                    </button>\n\n                   \n                </mat-expansion-panel>\n            </mat-accordion>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\" *ngIf=\"showInfo == true\">\n\n    <div class=\"mat-elevation-z8\">\n        <div class=\"table-responsive\">\n          <table mat-table [dataSource]=\"dataSourceEventos\">\n            <ng-container matColumnDef=\"codigoQueja\">\n              <th mat-header-cell *matHeaderCellDef class=\"headerTable\" style=\"width: 15%;\"> codigo Queja\n              </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element.codigoQueja}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"correlativo\">\n              <th mat-header-cell *matHeaderCellDef class=\"headerTable\" style=\"width: 15%;\"> Correlativo\n              </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element.correlativo}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"anioQueja\">\n              <th mat-header-cell *matHeaderCellDef class=\"headerTable\" style=\"width: 15%;\"> Año Queja\n              </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element.anioQueja}} </td>\n            </ng-container>\n\n            \n\n            <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n          </table>\n\n        </div>\n        <mat-paginator #paginatorInicial [pageSizeOptions]=\"[15]\" showFirstLastButtons></mat-paginator>\n      </div>\n\n</div>","<mat-toolbar color=\"primary\">\n    <a [routerLink]=\"'/'\" mat-icon-button class=\"example-icon\" arial-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu_books</mat-icon>\n    </a>\n    <span>Sistema de Quejas</span>\n    <span class=\"example-spacer\"></span>\n    <a *ngIf=\"!isLoggedIn\" [routerLink]=\"'/login'\" mat-icon-button class=\"example-icon favorite-icon\"\n        aria-label=\"Example icon-button with heart icon\">\n        Iniciar sesión\n    </a>\n    <a *ngIf=\"!isLoggedIn\" [routerLink]=\"'/signup'\" mat-icon-button class=\"example-icon favorite-icon mr20 ml70\"\n        aria-label=\"Example icon-button with heart icon\">\n        Registrar\n    </a>\n    <a *ngIf=\"isLoggedIn\" (click)=\"logout()\" style=\"margin-right: 50px\" mat-icon-button\n        class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        Cerrar sesión\n    </a>\n    <button *ngIf=\"isLoggedIn && user\" mat-button style=\"margin-right: 10px\" class=\"example-icon favorite-icon\"\n        aria-label=\"Example icon-button with heart icon\">\n        {{ user.username }}\n    </button>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isLoggedIn = false;\n  user:any = null;\n\n  constructor(public login:LoginService) { }\n\n  \n\n  ngOnInit(): void {\n    this.isLoggedIn = this.login.isLoggedIn();\n    this.user = this.login.getUser();\n    this.login.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.login.isLoggedIn();\n        this.user = this.login.getUser();\n      }\n    )\n  }\n\n  public logout(){\n    this.login.logout();\n    window.location.reload();\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ReglasNegocioService } from 'src/app/services/reglas-negocio.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { UploadFileService } from 'src/app/services/uploadFileService.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-operador',\n  templateUrl: './operador.component.html',\n  styleUrls: ['./operador.component.css']\n})\nexport class OperadorComponent implements OnInit {\n\n  asignar: any;\n  detalleQueja: any;\n  user: any = null;\n  isLoggedIn = false;\n  ipUsuario: string;\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'correlativo',\n    'codigoEtapa',\n    'detalleQueja',\n    'accion'\n  ];\n\n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private uploadFileService: UploadFileService,\n    public reglasNegocio: ReglasNegocioService\n  ) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n      }\n    )\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n    });\n    this.obtenerEventos();\n    this.spinner.hide();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  obtenerEventos() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'queja/operador').toPromise().then(data => {\n      console.log(data);\n      data.forEach(element => {\n        element.codigoEtapa = element.codigoEtapa == 5 ? 'Reanálisis' : '';\n      });\n      this.dataSourceEventos.sort = this.sort;\n      this.dataSourceEventos = new MatTableDataSource(data);\n      this.dataSourceEventos.paginator = this.paginator;\n    });\n  }\n\n\n  async obtenerQuejaById(id?: number) {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/byId/${id}`).toPromise().then(data => {\n      this.detalleQueja = data;\n      console.log(this.detalleQueja);\n      /* this.detalleQueja.forEach(element => {\n        element.codigoEtapa = element?.codigoEtapa == 2 ? 'Analisis' : '';\n      }); */\n    });\n  }\n\n  async resolver() {\n    Swal.fire({\n      showCloseButton: true,\n      title: '¿Está seguro de resolver la queja?',\n      text: 'Esta seguro de resolver la solicitud de queja',\n      showDenyButton: true,\n      denyButtonText: \"Cancelar\",\n      confirmButtonText: \"Resolver\",\n      allowEscapeKey: false,\n      allowOutsideClick: false, \n      input: 'text',\n      inputPlaceholder: 'Ingrese el motivo de resolución',\n      inputValidator(validarJustifiacion){\n        return !validarJustifiacion && 'Debe ingresar el motivo de resolución'\n      },\n    }).then(async (validarJustifiacion) => {\n      if (validarJustifiacion.isConfirmed) {\n        const justificacion = validarJustifiacion.value;\n        this.asignar = {\n          solicitud: [this.detalleQueja.codigoQueja],\n          complemento: 3,\n          justificacion: justificacion\n        };\n        console.log(this.asignar);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/asignar', this.asignar).toPromise().then(data => {\n          Swal.fire({\n            title: 'Rechazada!',\n            text: 'La queja ha sido rechazada',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1500\n          }).then(() => {\n            this.obtenerEventos();\n            this.detalleQueja = null;\n          });\n        });\n      }\n    })\n  }\n\n   async rechazar() {\n    Swal.fire({\n      showCloseButton: true,\n      title: '¿Está seguro de rechazar la queja?',\n      text: 'Esta seguro de rechazar la solicitud de queja',\n      showDenyButton: true,\n      denyButtonText: \"Cancelar\",\n      confirmButtonText: \"Rechazar\",\n      allowEscapeKey: false,\n      allowOutsideClick: false, \n      input: 'text',\n      inputPlaceholder: 'Ingrese el motivo de rechazo',\n      inputValidator(validarJustifiacion){\n        return !validarJustifiacion && 'Debe ingresar el motivo de rechazo'\n      },\n    }).then(async (validarJustifiacion) => {\n      if (validarJustifiacion.isConfirmed) {\n        const justificacion = validarJustifiacion.value;\n        this.asignar = {\n          solicitud: [this.detalleQueja.codigoQueja],\n          complemento: 4,\n          justificacion: justificacion\n        };\n        console.log(this.asignar);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/asignar', this.asignar).toPromise().then(data => {\n          Swal.fire({\n            title: 'Rechazada!',\n            text: 'La queja ha sido rechazada',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1500\n          }).then(() => {\n            this.obtenerEventos();\n            this.detalleQueja = null;\n          });\n        });\n      }\n    })\n  }\n\n}\n","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Operador </mat-card-title>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"container-fluid\">\n        <mat-form-field>\n            <mat-label>Busqueda</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"correlativo\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Correlativo </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.correlativo}} </td>\n                </ng-container>\n\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"codigoEtapa\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Etapa </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.codigoEtapa}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"detalleQueja\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Detalle </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.detalleQueja}} </td>\n                </ng-container>\n\n                <!-- Columna Acción -->\n                <ng-container matColumnDef=\"accion\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Administrar </th>\n                    <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n                        <span class=\"material-icons\" title=\"Ver más\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                            data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\"\n                            style=\"cursor: pointer;\">visibility</span>\n                        <span class=\"material-icons\" title=\"Asignar\" data-toggle=\"modal\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                              (click)=\"resolver()\"\n                            style=\"cursor: pointer;\">edit</span>\n                        <span class=\"material-icons\" title=\"No aplica\" data-toggle=\"modal\" (click)=\"obtenerQuejaById(evento.codigoQueja)\"\n                              (click)=\"rechazar()\"\n                            style=\"cursor: pointer;\">delete</span>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Detalle Queja</h1>\n                <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\n            </div>\n            <div class=\"modal-body\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>No. Queja</mat-label>\n                                <input matInput [value]=\"detalleQueja?.codigoQueja\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Justificación</mat-label>\n                                <input matInput [value]=\"detalleQueja?.justificacion\" disabled>\n                            </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Fecha Creacion</mat-label>\n                                <input matInput [value]=\"detalleQueja?.fechaAgrega\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Usuario de Creación</mat-label>\n                                <input matInput [value]=\"detalleQueja?.usuarioAgrega\" disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"col\">\n                                <mat-label>Detalle Queja</mat-label>\n                                <input matInput [value]=\"detalleQueja?.detalleQueja\" disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <a href=\"{{detalleQueja?.documentoSoporte}}\" target=\"_blank\" download>Descargar PDF</a>\n                        </div>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Aceptar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ReglasNegocioService } from 'src/app/services/reglas-negocio.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { UploadFileService } from 'src/app/services/uploadFileService.service';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\ninterface Ingreso {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-cuentahabiente-queja',\n  templateUrl: './cuentahabiente-queja.component.html',\n  styleUrls: ['./cuentahabiente-queja.component.css']\n})\nexport class CuentahabienteQuejaComponent implements OnInit {\n\n\n  corr: any;\n  sigl:any;\n  numerito: number;\n  cantidad: any;\n  numero: number;\n  cadena: string;\n  public file: File = null;\n  documento: any;\n  strImage: any;\n  url: string;\n  quejas: any;\n  medio: any;\n  anioActual = new Date().getFullYear();\n  user: any = null;\n  isLoggedIn = false;\n  ipUsuario: string;\n  ingresos: Ingreso[] = [\n    { value: '1', viewValue: 'Telefono' },\n    { value: '2', viewValue: 'Correo' },\n    { value: '3', viewValue: 'Chat' },\n    { value: '4', viewValue: 'Correo' },\n    { value: '5', viewValue: 'Presencial' },\n  ];\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'codigoQueja',\n    'nombre',\n    'detalleQueja',\n    'medioIngreso',\n    'estado'\n  ];\n  qms: any[] = [];\n  cuentaHabienteForm: FormGroup;\n  constructor(private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private uploadFileService: UploadFileService,\n    public reglasNegocio: ReglasNegocioService) {\n    this.cuentaHabienteForm = new FormGroup({\n      medioIngreso: new FormControl(''),\n      nombre: new FormControl('', Validators.required),\n      correoElectronico: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\n      telefono: new FormControl('', Validators.required),\n      oficina: new FormControl('', Validators.required),\n      nombreEmpleado: new FormControl('', Validators.required),\n      detalleQueja: new FormControl('', Validators.required),\n      documento: new FormControl(''),\n      tipoQueja: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    console.log('usuario',this.user);\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n        console.log('isLoggedIn',this.isLoggedIn);\n      }\n    )\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n    });\n    this.obtenerQuejas();\n    this.obtenerQMS();\n    this.spinner.hide();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  obtenerQMS() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'tipoQueja/listar').toPromise().then(data => {\n      this.qms = data;\n      console.log(data);\n    });\n  }\n\n  numeroQueja() {\n    console.log(this.cuentaHabienteForm.get('tipoQueja').value);\n    this.numero = this.cuentaHabienteForm.get('tipoQueja').value;\n    this.obtenerQMS();\n    this.qms.forEach(element => {\n      if (element.codigoTipoQueja == this.numero) {\n        this.sigl= element.siglas;\n      }\n      \n    });\n  }\n\n\n  obtenerQuejas(){\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/listar/${this.user.id}`).toPromise().then(data => {\n      this.quejas = data;\n      this.medio = this.quejas.codigoMedioIngreso;\n      data.forEach(element => {\n        element.medioIngreso = this.ingresos[element.codigoMedioIngreso - 1].viewValue;\n        element.estado = element.codigoEstadoInterno == 1 ? 'Presentada' : '';\n      });\n      console.log(data);\n      this.dataSourceEventos.sort = this.sort;\n      this.dataSourceEventos = new MatTableDataSource(this.quejas);\n      this.dataSourceEventos.paginator = this.paginator;\n    });\n  }\n\n  async guardarQueja(data: any) {\n    this.spinner.show();\n    this.uploadFileService.subirArchivo(this.file, 'CARPETA/SUBCARPETA')\n      .then(async (res: any) => {\n        this.url = res.secure_url;\n        await this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/queja/${this.numero}`).toPromise().then(data => {\n          this.cantidad = (data);\n          this.numerito = +this.cantidad.queja;\n          this.corr = this.numerito + 1;\n        });\n        const queja = {\n          codigoEtapa: 1,\n          codigoRegion: 1,\n          codigoTipoCreador: this.user.id,\n          codigoMedioIngreso: 5,\n          codigoEstadoExterno: 1,\n          codigoEstadoInterno: 1,\n          codigoTipoQueja: data.tipoQueja,\n          codigoPuntoAtencion: 8,\n          dpiUsuario: 1,\n          nombre: data.nombre,\n          correoElectronico: data.correoElectronico,\n          nombreEmpleado: data.nombreEmpleado,\n          detalleQueja: data.detalleQueja,\n          correlativo: `${this.sigl}-${this.numerito+1}-${this.anioActual}`,\n          documentoSoporte: this.url ? this.url : '',\n          justificacion: 1,\n          anioQueja: this.anioActual,\n          usuarioAgrega: this.user.username,\n          ipUsuarioAgrega: this.ipUsuario,\n          fechaAgrega: Number(moment()),\n        };\n        console.log(queja);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/crear', queja).toPromise().then(async data => {\n          this.obtenerQuejas();\n          this.enviarNotificacion();\n          this.spinner.hide();\n          Swal.fire({\n            titleText: `Su solicitud se ha creado con éxito`,\n            icon: 'success',\n            showCloseButton: true,\n            showConfirmButton: false,\n            position: 'top'\n          });\n          this.cuentaHabienteForm.reset();\n        }).catch(error => {\n          console.error(error);\n          this.spinner.hide();\n          Swal.fire({\n            titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n            icon: 'error',\n            showCloseButton: true,\n            showConfirmButton: false,\n            position: 'top'\n          });\n        });\n      }).catch(err => {\n        this.url = '';\n        Swal.fire({\n          titleText: 'Datos incorrectos',\n          text: 'Verifique que los datos ingresados sean correctos',\n          icon: 'error',\n        });\n      });\n\n\n\n  }\n\n  uploadFile() {\n    this.uploadFileService.subirArchivo(this.file, 'CARPETA/SUBCARPETA')\n      .then((res: any) => {\n        this.url = res.secure_url;\n        this.cadena = this.url;\n        Swal.fire({\n          titleText: 'Archivo cargado',\n          text: 'El archivo se ha cargado con exito',\n          icon: 'success',\n        });\n      }).catch(err => {\n        console.error(err);\n        Swal.fire({\n          titleText: 'Error al cargar archivo',\n          text: 'El archivo no se ha cargado con exito',\n          icon: 'error',\n        });\n      });\n  }\n  async seleccionArchivo(archivo: any) {\n    let documento = archivo.target.files[0];\n    //console.log(documento);\n    if (!documento) {\n      this.file = null;\n      //console.log(this.file)\n      return;\n    }\n\n    if (documento.type.indexOf('pdf') < 0) {\n      Swal.fire({\n        titleText: 'Error al seleccionar archivo',\n        text: 'El archivo debe ser del tipo pdf',\n        icon: 'info',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n      this.file = null;\n      return;\n    }\n    this.file = documento;\n\n    let reader = new FileReader();\n    let urlImagenTemp = reader.readAsDataURL(documento);\n    reader.onloadend = () => this.strImage = reader.result;\n  }\n\n\n  evento(event: any) {\n    this.documento = event.target.files[0];\n    console.log(this.documento);\n  }\n\n  enviarNotificacion() {\n    this.spinner.show();\n    const notificacion = {\n      destinatario: this.cuentaHabienteForm.value.correoElectronico,\n      destino: \"bancoprestamito@gmail.com\",\n      asunto: \"Notificación de queja\",\n      cuerpo: `Señor usuario, agredecemos su comunicación, le informamos que su queja ha sido recibida exitosamente. Para el seguimiento o cualquier consulta relacionada, no olvide que el numero de su queja es: ${this.sigl}-${this.numerito+1}-${this.anioActual}`\n    };\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'correo/send', notificacion).toPromise().then(async data => { }).catch(error => {\n      console.error(error);\n      this.spinner.hide();\n    });\n  }\n\n}\n","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Quejas Usuario </mat-card-title>\n\n\n    <!-- Button trigger Ingreso de Informacion -->\n    <button mat-raised-button type=\"button\" class=\"botones mt-4 mb-4\" data-bs-toggle=\"modal\"\n        data-bs-target=\"#staticAgregar\">\n        <mat-icon>add_circle_outline</mat-icon>\n        Queja\n    </button>\n</div>\n<br>\n<div class=\"container-fluid\">\n    <mat-form-field>\n        <mat-label>Busqueda</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n    </mat-form-field>\n\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n\n\n            <ng-container matColumnDef=\"codigoQueja\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> ID </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.codigoQueja}} </td>\n            </ng-container>\n\n            <!--Column region de atención-->\n            <ng-container matColumnDef=\"nombre\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Nombre </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.nombre}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"detalleQueja\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Detalle <br>Queja </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.detalleQueja}} </td>\n            </ng-container>\n\n\n            <ng-container matColumnDef=\"medioIngreso\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Medio <br>Queja </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.medioIngreso}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"estado\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Estado </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.estado}} </td>\n            </ng-container>\n\n            <!-- Columna Acción -->\n            <!-- <ng-container matColumnDef=\"accion\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Acción </th>\n                <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n                    <span class=\"material-icons\" title=\"Ver más\" data-bs-toggle=\"modal\"\n                        data-bs-target=\"#staticDetalleEventos\" style=\"cursor: pointer;\">visibility</span>\n                </td>\n            </ng-container> -->\n\n            <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n            </tr>\n        </table>\n\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n    </div>\n</div>\n\n\n<div class=\"modal fade\" id=\"staticAgregar\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Agregar Queja</h5>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"cuentaHabienteForm\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Ingreso Queja</mat-label>\n                                <mat-select formControlName=\"medioIngreso\" [disabled]=\"true\">\n                                    <mat-option *ngFor=\"let ingreso of ingresos\" [value]=\"ingreso.value\">\n                                        {{ingreso.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Nombre</mat-label>\n                                <input matInput formControlName=\"nombre\" matInput placeholder=\"Nombre\" maxlength=\"100\"\n                                    autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{cuentaHabienteForm.controls.nombre.value?.length || 0}}/100\n                                </mat-hint>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.nombre.hasError('required')\">\n                                    El nombre es requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Correo Electronico</mat-label>\n                                <input matInput type=\"email\" id=\"correo\" #correo formControlName=\"correoElectronico\"\n                                    placeholder=\"Correo Electronico\" maxlength=\"50\" autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{cuentaHabienteForm.controls.correoElectronico.value?.length ||\n                                    0}}/50</mat-hint>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.correoElectronico.hasError('required')\">\n                                    El correo electronico es requerido</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Telefono</mat-label>\n                                <input matInput formControlName=\"telefono\" matInput placeholder=\"Telefono\" maxlength=\"8\"\n                                    autocomplete=\"off\" (keypress)=\"reglasNegocio.soloNumeros($event)\">\n                                <mat-hint align=\"end\">{{cuentaHabienteForm.controls.telefono.value?.length || 0}}/8\n                                </mat-hint>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.telefono.hasError('required')\">\n                                    Numero de telefono requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Oficina</mat-label>\n                                <input matInput formControlName=\"oficina\" matInput placeholder=\"Oficina\" maxlength=\"16\"\n                                    autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{cuentaHabienteForm.controls.oficina.value?.length || 0}}/16\n                                </mat-hint>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.oficina.hasError('required')\">\n                                    Numero de oficina requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Nombre Empleado</mat-label>\n                                <input matInput formControlName=\"nombreEmpleado\" matInput placeholder=\"Oficina\"\n                                    maxlength=\"50\" autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{cuentaHabienteForm.controls.oficina.value?.length || 0}}/50\n                                </mat-hint>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.nombreEmpleado.hasError('required')\">\n                                    Nombre empleado requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Detalle Queja</mat-label>\n                                <textarea matInput formControlName=\"detalleQueja\" matInput placeholder=\"Detalle Queja\"\n                                    maxlength=\"250\" autocomplete=\"off\"></textarea>\n                                <mat-hint align=\"end\">{{cuentaHabienteForm.controls.detalleQueja.value?.length || 0}}/250\n                                </mat-hint>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.detalleQueja.hasError('required')\">\n                                    Detalle de la queja requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <div class=\"col-ms-6 col-md-6 col-lg-6 margenArriba\">\n                                <!-- <label>\n                                    <img src=\"assets/img/pdf.png\" alt=\"\" class=\"tipoDocumento\">Acta de\n                                    Negociacion</label>\n                                <br> -->\n                                <input (change)=\"seleccionArchivo($event)\" class=\"full mt-2\" type=\"file\"\n                                    formControlName=\"documento\" id=\"documento\">\n                            </div>\n                        </div>\n                        <!-- <div class=\"form-grop\">\n                            <label>Seleccionar Documento</label>\n                            <input type=\"file\" formControlName=\"documento\" id=\"documento\" class=\"form-control\">\n                        </div> -->\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Tipo de Queja</mat-label>\n                                <mat-select formControlName=\"tipoQueja\">\n                                    <mat-option *ngFor=\"let qms of qms\" [value]=\"qms.codigoTipoQueja\" (click)=\"numeroQueja()\">\n                                        {{qms.siglas}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"cuentaHabienteForm.controls.tipoQueja.hasError('required')\">\n                                    La región de atención es requerida\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btnCancelar\" data-bs-dismiss=\"modal\">Cancelar</button>\n                <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"guardarQueja(cuentaHabienteForm.value)\"\n                    class=\"btn btn-primary\">Guardar</button>\n\n                <!-- <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"guardarQueja(QuejasForm.value)\" class=\"btn btn-primary\">Guardar</button> -->\n                <!-- <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"uploadFile()\" class=\"btn btn-primary\">Guardar pdf</button> -->\n            </div>\n        </div>\n    </div>\n</div>","let baserUrl = 'http://localhost:8080'\r\nexport default baserUrl;","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\ninterface Tusuario {\n  value: Number;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  tusuarios: Tusuario[] = [\n    {value: 5, viewValue: 'USUARIO'},\n    {value: 6, viewValue: 'CUENTAHABIENTE'},\n  ];\n\n  public user = {\n    username : '',\n    password : '',\n    nombre : '',\n    apellido : '',\n    email : '',\n    telefono : '',\n    enabled : true,\n    tipo_usuario: ''\n  }\n\n  constructor(private userService: UserService, private snack:MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  formSubmit(){\n    console.log(this.user);\n    if(this.user.username == '' || this.user.username == null){\n      this.snack.open('El nombre de usuario es obligatorio !!', 'Aceptar',\n      {\n        duration: 3000,\n        verticalPosition: 'top',\n        horizontalPosition: 'right'\n      });\n      return;\n    }\n\n    this.userService.anadirUsuario(this.user).subscribe(\n      (data) => {\n        console.log(data);\n        Swal.fire('Usuario guardado','Usuario registrado con exito en el sistema','success');\n      },(error) => {\n        console.log(error);\n        this.snack.open('Ha ocurrido un error en el sistema !!', 'Aceptar',\n      {\n        duration: 3000\n      });\n      }\n    )\n  }\n\n\n  esEmailValido(email: string):boolean {\n    let mailValido = false;\n      'use strict';\n\n      var EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n      if (email.match(EMAIL_REGEX)){\n        mailValido = true;\n      }\n    return mailValido;\n  }\n  \n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row\" style=\"margin-top: 20px;\">\n      <div class=\"col-md-6 offset-md-3\">\n        <div class=\"container text-center\">\n          <img src=\"../../../assets/login.png\" width=\"100\" height=\"100\" alt=\"\">\n        </div>\n        <h1 class=\"text-center\">Registrate aqui</h1>\n        <form (ngSubmit)=\"formSubmit()\">\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Nombre de usuario</mat-label>\n            <input required [(ngModel)]=\"user.username\" name=\"username\" matInput\n              placeholder=\"Digite su nombre de usuario\">\n            <mat-hint>El nombre de usuario debe ser único</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Contraseña</mat-label>\n            <input required [(ngModel)]=\"user.password\" name=\"password\" type=\"password\" matInput\n              placeholder=\"Digite su contraseña\">\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Nombre</mat-label>\n            <input required [(ngModel)]=\"user.nombre\" name=\"nombre\" matInput placeholder=\"Digite su nombre\">\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Apellido</mat-label>\n            <input required [(ngModel)]=\"user.apellido\" name=\"apellido\" matInput placeholder=\"Digite su apellido\">\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input required [(ngModel)]=\"user.email\" name=\"email\" type=\"email\" matInput placeholder=\"Digite su email\">\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Telefono</mat-label>\n            <input required [(ngModel)]=\"user.telefono\" name=\"telefono\" matInput placeholder=\"Digite su telefono\">\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Tipo de usuario</mat-label>\n            <mat-select [(ngModel)]=\"user.tipo_usuario\" name=\"tipo_usuario\">\n              <mat-option *ngFor=\"let tusuario of tusuarios\" [value]=\"tusuario.value\">\n                {{tusuario.viewValue}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div class=\"container text-center\">\n            <button mat-raised-button color=\"primary\">Registrar</button>\n            <button type=\"reset\" type=\"reset\" style=\"margin-left: 20px;\" mat-raised-button\n              color=\"accent\">Limpiar</button>\n          </div>\n        </form>\n        <br><br><br>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CuentahabienteGuard implements CanActivate {\n\n  constructor(private loginService:LoginService,private router:Router){\n\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.loginService.isLoggedIn() && this.loginService.getUserRol() == 'CUENTAHABIENTE'){\n        return true;\n      }\n  \n      this.router.navigate(['login']);\n      return false;\n  }\n  \n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\nimport { UploadFileService } from 'src/app/services/uploadFileService.service';\nimport { ReglasNegocioService } from 'src/app/services/reglas-negocio.service';\n\ninterface Ingreso {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-quejas-usuario',\n  templateUrl: './quejas-usuario.component.html',\n  styleUrls: ['./quejas-usuario.component.css']\n})\nexport class QuejasUsuarioComponent implements OnInit {\n\n  numero: number;\n  medio: any;\n  sigl:any\n  cadena: string;\n  url: string;\n  public file: File = null;\n  documento: any;\n  formData: any;\n  strImage: any;\n  anioActual = new Date().getFullYear();\n  user: any = null;\n  isLoggedIn = false;\n  ipUsuario: string;\n  quejas: any;\n  ingresos: Ingreso[] = [\n    { value: '1', viewValue: 'Telefono' },\n    { value: '2', viewValue: 'Correo' },\n    { value: '3', viewValue: 'Chat' },\n    { value: '4', viewValue: 'Correo' },\n    { value: '5', viewValue: 'Presencial' },\n  ];\n  cantidad: any;\n  qms: any[] = [];\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'codigoQueja',\n    'nombre',\n    'detalleQueja',\n    'medioIngreso',\n    'estado'\n  ];\n  numerito: number;\n  corr: any;\n  QuejasForm: FormGroup;\n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private uploadFileService: UploadFileService,\n    public reglasNegocio: ReglasNegocioService\n  ) {\n    this.QuejasForm = new FormGroup({\n      medioIngreso: new FormControl('5'),\n      nombre: new FormControl('', Validators.required),\n      correoElectronico: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\n      telefono: new FormControl('', Validators.required),\n      oficina: new FormControl('', Validators.required),\n      nombreEmpleado: new FormControl('', Validators.required),\n      detalleQueja: new FormControl('', Validators.required),\n      documento: new FormControl(''),\n      tipoQueja: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    console.log('user', this.user.id);\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n        console.log('user', this.user);\n      }\n    )\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n      console.log('my ip' + this.ipUsuario);\n    });\n    this.obtenerQMS();\n    this.obtenerQuejas();\n    this.spinner.hide();\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  obtenerQMS() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'tipoQueja/listar').toPromise().then(data => {\n      this.qms = data;\n      console.log(data);\n    });\n  }\n\n  async obtenerQuejas() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/listar/${this.user.id}`).toPromise().then(data => {\n      this.quejas = data;\n      this.medio = this.quejas.codigoMedioIngreso;\n      data.forEach(element => {\n        element.medioIngreso = this.ingresos[element.codigoMedioIngreso - 1].viewValue;\n        element.estado = element.codigoEstadoInterno == 1 ? 'Presentada' : '';\n      });\n      console.log('queja??', this.quejas);\n      this.dataSourceEventos.sort = this.sort;\n      this.dataSourceEventos = new MatTableDataSource(this.quejas);\n      this.dataSourceEventos.paginator = this.paginator;\n    });\n  }\n\n\n  obtenerNumero(event: any) {\n    this.numero = event\n    console.log(this.numero);\n  }\n\n\n  /* async obtenerCantidadQuejas() {\n    await this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/queja/${this.numero}`).toPromise().then(data => {\n      this.cantidad = data;\n      console.log(data);\n    });\n  } */\n  numeroQueja() {\n    console.log(this.QuejasForm.get('tipoQueja').value);\n    this.numero = this.QuejasForm.get('tipoQueja').value;\n    this.obtenerQMS();\n    this.qms.forEach(element => {\n      if (element.codigoTipoQueja == this.numero) {\n        this.sigl= element.siglas;\n      }\n      \n    });\n  }\n\n\n  async guardarQueja(data: any) {\n    this.spinner.show();\n    \n    this.uploadFileService.subirArchivo(this.file, 'CARPETA/SUBCARPETA')\n      .then(async (res: any) => {\n        this.url = res.secure_url;\n        await this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `queja/queja/${this.numero}`).toPromise().then(data => {\n          this.cantidad = (data);\n          this.numerito = +this.cantidad.queja;\n          this.corr = this.numerito + 1;\n        });\n        const queja = {\n          codigoEtapa: 1,\n          codigoRegion: 1,\n          codigoTipoCreador: this.user.id,\n          codigoMedioIngreso: 5,\n          codigoEstadoExterno: 1,\n          codigoEstadoInterno: 1,\n          codigoTipoQueja: data.tipoQueja,\n          codigoPuntoAtencion: 8,\n          dpiUsuario: 1,\n          nombre: data.nombre,\n          correoElectronico: data.correoElectronico,\n          nombreEmpleado: data.nombreEmpleado,\n          detalleQueja: data.detalleQueja,\n          correlativo: `${this.sigl}-${this.numerito+1}-${this.anioActual}`,\n          documentoSoporte: this.url ? this.url : '',\n          justificacion: 1,\n          anioQueja: this.anioActual,\n          usuarioAgrega: this.user.username,\n          ipUsuarioAgrega: this.ipUsuario,\n          fechaAgrega: Number(moment())\n\n        };\n        console.log(queja.correlativo);\n        this.service.postData(this.service.BASE_URL_QUEJAS, 'queja/crear', queja).toPromise().then(async data => {\n          this.obtenerQuejas();\n          this.enviarNotificacion();\n          this.spinner.hide();\n          Swal.fire({\n            titleText: `Su solicitud se ha creado con éxito`,\n            icon: 'success',\n            showCloseButton: true,\n            showConfirmButton: false,\n            position: 'top'\n          });\n          this.QuejasForm.reset();\n        }).catch(error => {\n          console.error(error);\n          this.spinner.hide();\n          Swal.fire({\n            titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n            icon: 'error',\n            showCloseButton: true,\n            showConfirmButton: false,\n            position: 'top'\n          });\n        });\n      }).catch(err => {\n        this.url = '';\n        Swal.fire({\n          titleText: 'Datos incorrectos',\n          text: 'Verifique que los datos ingresados sean correctos',\n          icon: 'error',\n        });\n      });\n\n  }\n\n  uploadFile() {\n    this.uploadFileService.subirArchivo(this.file, 'CARPETA/SUBCARPETA')\n      .then((res: any) => {\n        this.url = res.secure_url;\n        this.cadena = this.url;\n        Swal.fire({\n          titleText: 'Archivo cargado',\n          text: 'El archivo se ha cargado con exito',\n          icon: 'success',\n        });\n      }).catch(err => {\n        console.error(err);\n        Swal.fire({\n          titleText: 'Error al cargar archivo',\n          text: 'El archivo no se ha cargado con exito',\n          icon: 'error',\n        });\n      });\n  }\n  async seleccionArchivo(archivo: any) {\n    let documento = archivo.target.files[0];\n    //console.log(documento);\n    if (!documento) {\n      this.file = null;\n      //console.log(this.file)\n      return;\n    }\n\n    if (documento.type.indexOf('pdf') < 0) {\n      Swal.fire({\n        titleText: 'Error al seleccionar archivo',\n        text: 'El archivo debe ser del tipo pdf',\n        icon: 'info',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n      this.file = null;\n      return;\n    }\n    this.file = documento;\n\n    let reader = new FileReader();\n    let urlImagenTemp = reader.readAsDataURL(documento);\n    reader.onloadend = () => this.strImage = reader.result;\n  }\n\n\n  evento(event: any) {\n    this.documento = event.target.files[0];\n    console.log(this.documento);\n  }\n\n\n  enviarNotificacion() {\n    this.spinner.show();\n    const notificacion = {\n      destinatario: this.QuejasForm.value.correoElectronico,\n      destino: \"bancoprestamito@gmail.com\",\n      asunto: \"Notificación de queja\",\n      cuerpo: `Señor cuentahabiente, agredecemos su comunicación, le informamos que su queja ha sido recibida exitosamente. Para el seguimiento o cualquier consulta relacionada, no olvide que el numero de su queja es: ${this.sigl}-${this.numerito+1}-${this.anioActual}`\n    };\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'correo/send', notificacion).toPromise().then(async data => { }).catch(error => {\n      console.error(error);\n      this.spinner.hide();\n    });\n  }\n}","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Quejas Usuario </mat-card-title>\n\n\n    <!-- Button trigger Ingreso de Informacion -->\n    <button mat-raised-button type=\"button\"  class=\"botones mt-4 mb-4\" data-bs-toggle=\"modal\"\n        data-bs-target=\"#staticAgregar\">\n        <mat-icon>add_circle_outline</mat-icon>\n        Queja\n    </button>\n</div>\n<br>\n<div class=\"container-fluid\">\n    <mat-form-field>\n        <mat-label>Busqueda</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n    </mat-form-field>\n\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n\n\n            <ng-container matColumnDef=\"codigoQueja\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> ID </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.codigoQueja}} </td>\n            </ng-container>\n\n            <!--Column region de atención-->\n            <ng-container matColumnDef=\"nombre\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Nombre </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.nombre}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"detalleQueja\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Detalle <br>Queja </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.detalleQueja}} </td>\n            </ng-container>\n\n\n            <ng-container matColumnDef=\"medioIngreso\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Medio <br>Queja </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.medioIngreso}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"estado\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Estado </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.estado}} </td>\n            </ng-container>\n\n            <!-- Columna Acción -->\n            <!-- <ng-container matColumnDef=\"accion\">\n                <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Acción </th>\n                <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n                    <span class=\"material-icons\" title=\"Ver más\" data-bs-toggle=\"modal\"\n                        data-bs-target=\"#staticDetalleEventos\" style=\"cursor: pointer;\">visibility</span>\n                </td>\n            </ng-container> -->\n\n            <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n            </tr>\n        </table>\n\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n    </div>\n</div>\n\n\n<div class=\"modal fade\" id=\"staticAgregar\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Agregar Queja</h5>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"QuejasForm\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Ingreso Queja</mat-label>\n                                <mat-select formControlName=\"medioIngreso\" [disabled]=\"true\">\n                                    <mat-option *ngFor=\"let ingreso of ingresos\" [value]=\"ingreso.value\">\n                                        {{ingreso.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Nombre</mat-label>\n                                <input matInput formControlName=\"nombre\" matInput placeholder=\"Nombre\" maxlength=\"100\"\n                                    autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{QuejasForm.controls.nombre.value?.length || 0}}/100\n                                </mat-hint>\n                                <mat-error *ngIf=\"QuejasForm.controls.nombre.hasError('required')\">\n                                    El nombre es requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Correo Electronico</mat-label>\n                                <input matInput type=\"email\" id=\"correo\" #correo formControlName=\"correoElectronico\"\n                                    placeholder=\"Correo Electronico\" maxlength=\"50\" autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{QuejasForm.controls.correoElectronico.value?.length ||\n                                    0}}/50</mat-hint>\n                                <mat-error *ngIf=\"QuejasForm.controls.correoElectronico.hasError('required')\">\n                                    El correo electronico es requerido</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Telefono</mat-label>\n                                <input matInput formControlName=\"telefono\" matInput placeholder=\"Telefono\" maxlength=\"8\"\n                                    autocomplete=\"off\" (keypress)=\"reglasNegocio.soloNumeros($event)\">\n                                <mat-hint align=\"end\">{{QuejasForm.controls.telefono.value?.length || 0}}/8\n                                </mat-hint>\n                                <mat-error *ngIf=\"QuejasForm.controls.telefono.hasError('required')\">\n                                    Numero de telefono requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Oficina</mat-label>\n                                <input matInput formControlName=\"oficina\" matInput placeholder=\"Oficina\" maxlength=\"16\"\n                                    autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{QuejasForm.controls.oficina.value?.length || 0}}/16\n                                </mat-hint>\n                                <mat-error *ngIf=\"QuejasForm.controls.oficina.hasError('required')\">\n                                    Numero de oficina requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Nombre Empleado</mat-label>\n                                <input matInput formControlName=\"nombreEmpleado\" matInput placeholder=\"Oficina\"\n                                    maxlength=\"50\" autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{QuejasForm.controls.oficina.value?.length || 0}}/50\n                                </mat-hint>\n                                <mat-error *ngIf=\"QuejasForm.controls.nombreEmpleado.hasError('required')\">\n                                    Nombre empleado requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Detalle Queja</mat-label>\n                                <textarea matInput formControlName=\"detalleQueja\" matInput placeholder=\"Detalle Queja\"\n                                    maxlength=\"250\" autocomplete=\"off\"></textarea>\n                                <mat-hint align=\"end\">{{QuejasForm.controls.detalleQueja.value?.length || 0}}/250\n                                </mat-hint>\n                                <mat-error *ngIf=\"QuejasForm.controls.detalleQueja.hasError('required')\">\n                                    Detalle de la queja requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <div class=\"col-ms-6 col-md-6 col-lg-6 margenArriba\">\n                                <!-- <label>\n                                    <img src=\"assets/img/pdf.png\" alt=\"\" class=\"tipoDocumento\">Acta de\n                                    Negociacion</label>\n                                <br> -->\n                                <input (change)=\"seleccionArchivo($event)\" class=\"full mt-2\" type=\"file\"\n                                    formControlName=\"documento\" id=\"documento\">\n                            </div>\n                        </div>\n                        <!-- <div class=\"form-grop\">\n                            <label>Seleccionar Documento</label>\n                            <input type=\"file\" formControlName=\"documento\" id=\"documento\" class=\"form-control\">\n                        </div> -->\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Tipo de Queja</mat-label>\n                                <mat-select formControlName=\"tipoQueja\" >\n                                    <mat-option *ngFor=\"let qms of qms\" [value]=\"qms.codigoTipoQueja\" (click)=\"numeroQueja()\" >\n                                        {{qms.siglas}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"QuejasForm.controls.tipoQueja.hasError('required')\">\n                                    La región de atención es requerida\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btnCancelar\" data-bs-dismiss=\"modal\">Cancelar</button>\n                <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"guardarQueja(QuejasForm.value)\"\n                    class=\"btn btn-primary\">Guardar</button>\n\n                <!-- <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"guardarQueja(QuejasForm.value)\" class=\"btn btn-primary\">Guardar</button> -->\n                <!-- <button type=\"button\" data-bs-dismiss=\"modal\" (click)=\"uploadFile()\" class=\"btn btn-primary\">Guardar pdf</button> -->\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baserUrl from './helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  public anadirUsuario(user:any){\n    return this.httpClient.post(`${baserUrl}/usuarios/`,user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class = \"bootstrap-wrapper\">\n    <div class = \"container-fluid\">\n      <div class = \"row\">\n        <div class = \"col-md-3\">\n          <app-sidebar></app-sidebar>\n        </div>\n  \n        <div class = \"col-md-9\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div> ","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n\n  BASE_URL_QUEJAS = environment.BASE_URL_QUEJAS;\n\n\n  rolLogueado: any;\n\n  constructor(private http: HttpClient) { }\n\n  /**\n        * Metodo que realiza un get a un microservicio haciendo uso de un solo parametro \n        * enviando el valor en la url ejemplo http://host.microservicio/metodoGet/parametro\n        * @param pUrl url del microservicio ejemplo http://host.microservicio/metodoGet\n        * @param pNombreServicio nombre del servicio a llamar. Puede ser null\n        * @param pParametro parametro que se envia al servicio este puede ser null si no se envia parametro\n        */\n  public getData<T>(pUrl: string, pNombreServicio: string | null, pParametro: string | null = null, pJSON: boolean = false): Observable<T> {\n    if (pNombreServicio == null) {\n      if (pParametro === null) {\n        return this.http.get<T>(`${pUrl}`, this.generateHeaders(pJSON));\n      } else {\n        return this.http.get<T>(`${pUrl}/${pParametro}`, this.generateHeaders(pJSON));\n      }\n    } else {\n      if (pParametro === null) {\n        return this.http.get<T>(`${pUrl}/${pNombreServicio}`, this.generateHeaders(pJSON));\n      } else {\n        return this.http.get<T>(`${pUrl}/${pNombreServicio}/${pParametro}`, this.generateHeaders(pJSON));\n      }\n    }\n  }\n\n  public generateHeaders(json: boolean = false): object {\n    let headers: HttpHeaders;\n    if (json) {\n      headers = new HttpHeaders({\n        'Accept': '*/*',\n        'Content-Type': 'application/json'\n      });\n    } else {\n      headers = new HttpHeaders({\n        'Accept': '*/*'\n      });\n    }\n    //console.log('header a enviar:', JSON.stringify(headers));\n    let httpOptions: object = { \"headers\": headers };\n    return httpOptions;\n  }\n\n  public postData(pUrl: string, pNombreServicio: string | null, pBody: Object, pJSON: boolean = true): Observable<any> {\n    if (pNombreServicio === null) {\n      return this.http.post(pUrl, pBody, this.generateHeaders(pJSON));\n    } else {\n      return this.http.post(`${pUrl}/${pNombreServicio}`, pBody, this.generateHeaders(pJSON));\n    }\n  }\n\n  public putData<T>(pUrl: string, pParametro: string, pBody: T): Observable<any> {\n    let body = null;\n    if (pBody)\n      body = JSON.stringify(pBody);\n\n    if (pParametro === null) {\n      return this.http.put(`${pUrl}`, body, this.generateHeaders(true));\n    }\n    else {\n      return this.http.put(`${pUrl}/${pParametro}`, body, this.generateHeaders(true));\n    }\n  }\n\n  getIp() {\n    return this.http.get('https://ipapi.co/json')\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-usuarios-punto-atencion',\n  templateUrl: './usuarios-punto-atencion.component.html',\n  styleUrls: ['./usuarios-punto-atencion.component.css']\n})\nexport class UsuariosPuntoAtencionComponent implements OnInit {\n\n  cantidadPa: any;\n  cargomodificar: any;\n  estado: any;\n  evaluarRegion: any;\n  datocargo: any;\n  user: any = null;\n  cargoMostrar: any;\n  upatencion: any;\n  usuarioAtencionForm: FormGroup;\n  atencion: any;\n  region: any;\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  regiones: any = [];\n  puntosAtencion: any = [];\n  catcargos: any = [];\n  patencionActivas: any = [];\n  usuarioUpatencion: any = [];\n  eventoColumns: string[] = [\n    'regionPatencion',\n    'dpiUsuario',\n    'nombreUsuarioAtencion',\n    'codigoCargo',\n    'accion'\n  ];\n  isLoggedIn = false;\n  ipUsuario: string;\n  detalleUpatencion: any;\n\n  \n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private userService: UserService\n  ) {\n    this.usuarioAtencionForm = new FormGroup({\n      region: new FormControl('', Validators.required),\n      puntoAtencion: new FormControl('', Validators.required),\n      dpi: new FormControl('', Validators.required),\n      nombre: new FormControl('', Validators.required),\n      correo: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\n      cargo: new FormControl('', Validators.required),\n      estadoUsuario: new FormControl(''),\n    });\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.obtenerCargos();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n      }\n    )\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n      console.log('my ip' + this.ipUsuario);\n    })\n    this.obtenerUsuarioPuertoAtencion();\n    this.obtenerRegion();\n    this.obtenerPuntosAtencion();\n    this.obtenerUsuarioPuntoAtencion();\n    this.spinner.hide();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  obtenerUsuarioPuertoAtencion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'upatencion/listar').toPromise().then(data => {\n      this.upatencion = data;\n      this.dataSourceEventos.sort = this.sort;\n      this.dataSourceEventos = new MatTableDataSource(this.upatencion);\n      this.dataSourceEventos.paginator = this.paginator;\n    });\n  }\n\n\n  \n\n  obtenerRegion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'catalogos/regiones').toPromise().then(data => {\n      this.regiones = data;\n      console.log(data);\n      this.spinner.hide();\n    });\n  }\n\n  cancelar() {\n    this.usuarioAtencionForm.reset();\n  }\n\n  obtenerPuntosAtencion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'patencion/listar').toPromise().then(data => {\n      this.puntosAtencion = data;\n      this.spinner.hide();\n    });\n  }\n\n  obtenerUsuarioPuntoAtencion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'upatencion/listar').toPromise().then(data => {\n      this.usuarioUpatencion = data;\n      this.spinner.hide();\n    });\n  }\n\n\n  obtenerCargos() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'catalogos/cargo').toPromise().then(data => {\n      this.catcargos = data;\n      this.spinner.hide();\n    });\n  }\n\n  validarDpi() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `upatencion/validar/dpi/${this.usuarioAtencionForm.value.dpi}`).toPromise().then(data => {\n      console.log('dpi', this.usuarioAtencionForm.value.dpi)\n      this.atencion = data;\n      console.log(this.atencion);\n      if (this.atencion == true) {\n        this.usuarioAtencionForm.get('dpi')?.setValue('');\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'El DPI ya se encuentra registrado!',\n        });\n      }\n    });\n  }\n\n  guardarUsuarioAtencion(data: any) {\n    this.spinner.show();\n    const guardarAtencion = {\n      nombreUsuarioAtencion: data.nombre,\n      regionPatencion: data.region,\n      codigoEstado: 1,\n      codigoPuntoAtencion: data.puntoAtencion,\n      dpiUsuario: data.dpi,\n      codigoCargo: data.cargo,\n      correoElectronico: data.correo,\n      usuarioAgrega: this.user.username,\n      ipUsuarioAgrega: this.ipUsuario,\n      fechaAgrega: Number(moment()),\n    };\n    const user = {\n      username: data.nombre,\n      password: '123456',\n      nombre: data.nombre,\n      apellido: '',\n      email: data.correo,\n      telefono: '',\n      enabled: true,\n      tipo_usuario: data.cargo == 6 ? 4 : data.cargo == 5 ? 3 : data.cargo == 4 ? 7 : 0,\n    }\n    console.log('user', user)\n    console.log('upatencion', guardarAtencion)\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'upatencion/crear', guardarAtencion).toPromise().then(data => {\n      this.atencion = data;\n      this.userService.anadirUsuario(user).subscribe(\n      )\n      this.spinner.hide();\n      console.log(this.atencion);\n      Swal.fire({\n        titleText: `Su solicitud se ha creado con éxito`,\n        icon: 'success',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n      this.obtenerUsuarioPuertoAtencion();\n      this.usuarioAtencionForm.reset();\n    }).catch(error => {\n      console.error(error);\n      this.spinner.hide();\n      Swal.fire({\n        titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n        icon: 'error',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    });\n  }\n\n\n\n  obtenerRgion() {\n    this.evaluarRegion = this.usuarioAtencionForm.get('region')?.value\n  }\n\n  obtenerPuntoAtencion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `patencion/activa/${this.evaluarRegion}`).toPromise().then(data => {\n      this.patencionActivas = data;\n    });\n  }\n\n  obtenerDetalleUpatencion(id: any) {\n    this.spinner.show();\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `upatencion/detalle/${id}`).toPromise().then(data => {\n      this.detalleUpatencion = data;\n      this.usuarioAtencionForm.get('nombre')?.setValue(this.detalleUpatencion.nombreUsuarioAtencion);\n      this.usuarioAtencionForm.get('dpi')?.setValue(this.detalleUpatencion.dpiUsuario);\n      this.usuarioAtencionForm.get('correo')?.setValue(this.detalleUpatencion.correoElectronico);\n      this.usuarioAtencionForm.get('cargo')?.setValue(this.detalleUpatencion.codigoCargo);\n      this.usuarioAtencionForm.get('region')?.setValue(this.detalleUpatencion.regionPatencion);\n      this.usuarioAtencionForm.get('puntoAtencion')?.setValue(this.detalleUpatencion.codigoPuntoAtencion);\n      this.usuarioAtencionForm.get('estadoUsuario')?.setValue(this.detalleUpatencion.codigoEstado);\n      if (this.detalleUpatencion.regionPatencion == 1) {\n        this.region = 'Región Central'\n      } else if (this.detalleUpatencion.regionPatencion == 2) {\n        this.region = 'Región Sur'\n      } else if (this.detalleUpatencion.regionPatencion == 3) {\n        this.region = 'Región Nororiente'\n      } else if (this.detalleUpatencion.regionPatencion == 4) {\n        this.region = 'Región Occidente'\n      }\n\n      this.spinner.hide();\n    });\n  }\n\n  validarEstado(event: any) {\n    let estado = event.target.value;\n  }\n\n  obtenerCargo() {\n    this.datocargo = this.usuarioAtencionForm.get('cargo')?.value;\n    console.log('cargo', this.datocargo);\n  }\n\n  consultarCantidadPa() {\n    this.spinner.show();\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `patencion/cantidad/${this.usuarioAtencionForm.value.puntoAtencion}`).toPromise().then(data => {\n      this.cantidadPa = data;\n      if (this.cantidadPa == 0) {\n        this.usuarioAtencionForm.get('puntoAtencion')?.setValue('');\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'El punto de atención no tiene usuarios asignados!',\n        });\n      }\n      this.spinner.hide();\n    });\n    this.spinner.hide();\n  }\n\n  actualizarUsuarioAtencion() {\n    this.spinner.show();\n    this.usuarioAtencionForm.get('cargo')?.updateValueAndValidity();\n    const actualizarUpatencion = {\n      codigoUsuarioPunto: this.detalleUpatencion.codigoUsuarioPunto,\n      codigoCargo: this.usuarioAtencionForm.get('cargo')?.value,\n      nombreUsuarioAtencion: this.detalleUpatencion.nombreUsuarioAtencion,\n      regionPatencion: this.detalleUpatencion.regionPatencion,\n      codigoEstado: this.usuarioAtencionForm.get('estadoUsuario')?.value ? 1 : 2,\n      codigoPuntoAtencion: this.detalleUpatencion.codigoPuntoAtencion,\n      dpiUsuario: this.detalleUpatencion.dpiUsuario,\n      correoElectronico: this.detalleUpatencion.correoElectronico,\n      usuarioAgrega: this.user.username,\n      ipUsuarioAgrega: this.ipUsuario,\n      fechaAgrega: Number(moment()),\n      fechaModifica: Number(moment()),\n    }\n    console.log('actualizar', actualizarUpatencion)\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'upatencion/modificar/upa', actualizarUpatencion).toPromise().then(data => {\n      this.atencion = data;\n      this.cancelar();\n      this.spinner.hide();\n      console.log(this.atencion);\n      Swal.fire({\n        titleText: `Su solicitud se ha actualizado con éxito`,\n        icon: 'success',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n      this.obtenerUsuarioPuertoAtencion();\n      this.usuarioAtencionForm.reset();\n    }).catch(error => {\n      console.error(error);\n      this.spinner.hide();\n      Swal.fire({\n        titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n        icon: 'error',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    });\n  }\n}","<div class=\"card-body \">\n    <mat-card-title class=\"titulo\"> Usuarios Puntos de Atencion </mat-card-title>\n\n\n    <!-- Button trigger Ingreso de Informacion -->\n    <button mat-raised-button type=\"button\" class=\"botones mt-4 mb-4\" data-bs-toggle=\"modal\"\n        data-bs-target=\"#staticAgregar\">\n        <mat-icon>add_circle_outline</mat-icon>\n        Usuario atención\n    </button>\n\n</div>\n<br>\n<div class=\"container-fluid\">\n    <div class=\"container-fluid\">\n        <mat-form-field>\n            <mat-label>Busqueda</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"regionPatencion\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Región </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.regionPatencion}} </td>\n                </ng-container>\n\n                <!-- Column ID punto de atención -->\n                <ng-container matColumnDef=\"dpiUsuario\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Dpi </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dpiUsuario}} </td>\n                </ng-container>\n\n                <!--Column region de atención-->\n                <ng-container matColumnDef=\"nombreUsuarioAtencion\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Nombre </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.nombreUsuarioAtencion}}</td>\n                </ng-container>\n\n                <!-- Column nombre punto de atención-->\n                <ng-container matColumnDef=\"codigoCargo\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Cargo </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.codigoCargo}} </td>\n                </ng-container>\n\n                <!-- Columna Acción -->\n                <ng-container matColumnDef=\"accion\">\n                    <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Acción </th>\n                    <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n                        <span class=\"material-icons\" title=\"Ver más\"\n                            (click)=\"obtenerDetalleUpatencion(evento.codigoUsuarioPunto)\" data-bs-toggle=\"modal\"\n                            data-bs-target=\"#staticDetalleEventos\" style=\"cursor: pointer;\">visibility</span>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n    </div>\n</div>\n\n\n<!-- Agregar punto de atención -->\n<div class=\"modal fade\" id=\"staticAgregar\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Agregar Usuario de Atención</h5>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"usuarioAtencionForm\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Región</mat-label>\n                                <mat-select formControlName=\"region\">\n                                    <mat-option *ngFor=\"let regiones of regiones\" [value]=\"regiones.codigoRegionalId\"\n                                        (click)=\"obtenerRgion();obtenerPuntoAtencion()\">\n                                        {{regiones.nombreRegion}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"usuarioAtencionForm.controls.region.hasError('required')\">\n                                    La región es requerida\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Punto de atención</mat-label>\n                                <mat-select formControlName=\"puntoAtencion\">\n                                    <mat-option *ngFor=\"let patencionActivas of patencionActivas\"\n                                        [value]=\"patencionActivas.codigoAtencionId\">\n                                        {{patencionActivas.nombrePatencion}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"usuarioAtencionForm.controls.puntoAtencion.hasError('required')\">\n                                    El punto de atención es requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>DPI</mat-label>\n                                <input matInput formControlName=\"dpi\" matInput placeholder=\"DPI\" maxlength=\"16\"\n                                    autocomplete=\"off\" (change)=\"validarDpi()\">\n                                <mat-hint align=\"end\">{{usuarioAtencionForm.controls.dpi.value?.length || 0}}/16\n                                </mat-hint>\n                                <mat-error *ngIf=\"usuarioAtencionForm.controls.dpi.hasError('required')\">\n                                    El DPI es requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Nombre</mat-label>\n                                <input matInput #nombre formControlName=\"nombre\" placeholder=\"Nombre usuario\"\n                                    maxlength=\"225\" autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{usuarioAtencionForm.controls.nombre.value?.length ||\n                                    0}}/225</mat-hint>\n                                <mat-error *ngIf=\"usuarioAtencionForm.controls.nombre.hasError('required')\">\n                                    El nombre es requerido</mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Correo Electronico</mat-label>\n                                <input matInput type=\"email\" id=\"correo\" #correo formControlName=\"correo\"\n                                    placeholder=\"Correo Electronico\" maxlength=\"50\" autocomplete=\"off\">\n                                <mat-hint align=\"end\">{{usuarioAtencionForm.controls.correo.value?.length ||\n                                    0}}/50</mat-hint>\n                                <mat-error *ngIf=\"usuarioAtencionForm.controls.correo.hasError('required')\">\n                                    El correo electronico es requerido</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Cargo</mat-label>\n                                <mat-select formControlName=\"cargo\">\n                                    <mat-option *ngFor=\"let catcargo of catcargos\" [value]=\"catcargo.codigoCargo\">\n                                        {{catcargo.nombreCargo}}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"usuarioAtencionForm.controls.cargo.hasError('required')\">\n                                    El nombre de cargo es requerido\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btnCancelar\" data-bs-dismiss=\"modal\" (click)=\"cancelar()\">Cancelar</button>\n                <button type=\"button\" data-bs-dismiss=\"modal\"\n                    (click)=\"guardarUsuarioAtencion(usuarioAtencionForm.value);cancelar()\"\n                    [disabled]=\"usuarioAtencionForm.invalid\" class=\"btnGuardar\">Guardar</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- Modificar Usuario punto atención -->\n<div class=\"modal fade\" id=\"staticDetalleEventos\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header titulo\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\"></h1>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"usuarioAtencionForm\">\n\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>DPI</mat-label>\n                                <input matInput [value]=\"detalleUpatencion?.dpiUsuario\" matInput disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Nombre Usuario</mat-label>\n                                <input matInput [value]=\"detalleUpatencion?.nombreUsuarioAtencion\" matInput disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Región</mat-label>\n                                <input matInput [value]=\"region\" matInput disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Cargos</mat-label>\n                                <mat-select formControlName=\"cargo\">\n                                    <mat-option *ngFor=\"let catcargos of catcargos\" [value]=\"catcargos.codigoCargo\" >\n                                        {{catcargos.nombreCargo}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-10\">\n                            <mat-label>Estado</mat-label>\n                            <div class=\"col-6\">\n                                <mat-slide-toggle color=\"primary\" #estado (blur)=\"validarEstado($event)\" formControlName=\"estadoUsuario\">{{estado.checked?\n                                    'Activo' :\n                                    'Inactivo'}}</mat-slide-toggle>\n                            </div>\n                        </div>\n                        <!-- <div class=\"col-6\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Cargos</mat-label>\n                                <mat-select formControlName=\"cargo\">\n                                    <mat-option *ngFor=\"let catcargos of catcargos\" [value]=\"catcargos.codigoCargo\" >\n                                        {{catcargos.nombreCargo}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div> -->\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btnCancelar\" (click)=\"cancelar()\" data-bs-dismiss=\"modal\">Cancelar</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\"\n                    (click)=\"actualizarUsuarioAtencion()\">Guardar\n                    Cambios</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ServiceService } from 'src/app/services/service.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-usuarios-atencion',\n  templateUrl: './usuarios-atencion.component.html',\n  styleUrls: ['./usuarios-atencion.component.css']\n})\nexport class UsuariosAtencionComponent implements OnInit {\n\n  regiones: any = [];\n\n  constructor(private service: ServiceService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.obtenerRegion();\n    this.spinner.hide();\n  }\n\n\n  obtenerRegion() {\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'catalogos/regiones').toPromise().then(data => {\n      this.regiones = data;\n      console.log(data);\n    });\n  }\n\n}\n","<p>usuarios-atencion works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdministracionUsuariosComponent } from './pages/admin/administracion-usuarios/administracion-usuarios.component';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { PuntosAtencionComponent } from './pages/admin/puntos-atencion/puntos-atencion.component';\nimport { TipoQuejasComponent } from './pages/admin/tipo-quejas/tipo-quejas.component';\nimport { UsuariosPuntoAtencionComponent } from './pages/admin/usuarios-punto-atencion/usuarios-punto-atencion.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { AdminGuard } from './services/admin.guard';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { UsuarioGuard } from './services/usuario.guard';\nimport { QuejasUsuarioComponent } from './pages/user/quejas-usuario/quejas-usuario.component';\nimport { CuentahabienteDashboardComponent } from './pages/cuentahabiente/cuentahabiente-dashboard/cuentahabiente-dashboard.component';\nimport { CuentahabienteGuard } from './services/cuentahabiente.guard';\nimport { CuentahabienteQuejaComponent } from './pages/cuentahabiente/cuentahabiente-queja/cuentahabiente-queja.component';\nimport { ConsultaUsuarioComponent } from './pages/user/consulta-usuario/consulta-usuario.component';\nimport { CentralizadorDashboardComponent } from './pages/centralizador/centralizador-dashboard/centralizador-dashboard.component';\nimport { CentralizadorGuard } from './services/centralizador.guard';\nimport { CentralizadorComponent } from './pages/centralizador/centralizador/centralizador.component';\nimport { AnalisisComponent } from './pages/centralizador/analisis/analisis.component';\nimport { OperadorDashboardComponent } from './pages/operador/operador-dashboard/operador-dashboard.component';\nimport { OperadorGuard } from './services/operador.guard';\nimport { OperadorComponent } from './pages/operador/operador/operador.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'admin',\n    component: DashboardComponent,\n    canActivate: [AdminGuard],\n    children: [\n     {\n        path: 'puntos-atencion',\n        component: PuntosAtencionComponent\n      },\n      {\n        path: 'usuarios-punto-atencion',\n        component: UsuariosPuntoAtencionComponent\n      },\n      {\n        path: 'tipo-quejas',\n        component: TipoQuejasComponent\n      },\n      {\n        path: 'admin-usuarios',\n        component: AdministracionUsuariosComponent\n      }\n    ]\n  },\n  {\n    path: 'user-dashboard',\n    component: UserDashboardComponent,\n    canActivate: [UsuarioGuard],\n    children: [\n      {\n        path: 'usuario',\n        component: QuejasUsuarioComponent\n      },\n      {\n        path: 'consulta',\n        component: ConsultaUsuarioComponent\n      }\n    ]\n  },\n  {\n    path: 'cuentahabiente-dashboard',\n    component: CuentahabienteDashboardComponent,\n    canActivate: [CuentahabienteGuard],\n    children: [\n      {\n        path: 'cuentahabiente',\n        component: CuentahabienteQuejaComponent\n      }\n    ]\n  },\n  {\n    path: 'centralizador-dashboard',\n    component: CentralizadorDashboardComponent,\n    canActivate: [CentralizadorGuard],\n    children: [\n      {\n        path: 'centralizador',\n        component: CentralizadorComponent\n      },{\n        path: 'analizador',\n        component: AnalisisComponent\n      }\n      \n    ]\n  },\n  {\n    path: 'operador-dashboard',\n    component: OperadorDashboardComponent,\n    canActivate: [OperadorGuard],\n    children: [\n      {\n        path: 'operador',\n        component: OperadorComponent\n      }\n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-centralizador-dashboard',\n  templateUrl: './centralizador-dashboard.component.html',\n  styles: [\n  ]\n})\nexport class CentralizadorDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <app-centralizador-sidebar></app-centralizador-sidebar>\n        </div>\n        <div class=\"col-md-9\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceService } from 'src/app/services/service.service';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-tipo-quejas',\n  templateUrl: './tipo-quejas.component.html',\n  styleUrls: ['./tipo-quejas.component.css']\n})\nexport class TipoQuejasComponent implements OnInit {\n\n  detalleQueja: any;\n  isLoggedIn = false;\n  ipUsuario: string;\n  user: any = null;\n  maskconfig: any;\n  codigo: any;\n  listaTipoQuejas: any;\n  dataSourceEventos = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  quejasForm: FormGroup;\n  @ViewChild(MatSort) sort: MatSort;\n  eventoColumns: string[] = [\n    'codigoTipoQueja',\n    'siglas',\n    'descripcionTipoQueja',\n    'accion'\n  ];\n\n  constructor(\n    private service: ServiceService,\n    private spinner: NgxSpinnerService,\n    private loginService: LoginService,\n    private http: HttpClient\n  ) {\n    this.quejasForm = new FormGroup({\n      siglasQueja: new FormControl('', Validators.required),\n      descripcionQueja: new FormControl('', Validators.required),\n      estadoQueja: new FormControl(''),\n    });\n    this.maskconfig = {\n      mask: [/\\D/, /\\D/, /\\D/],\n      placeholderChar: '\\u2000',\n      guide: false,\n      keepCharPositions: false\n    }\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.isLoggedIn = this.loginService.isLoggedIn();\n    this.user = this.loginService.getUser();\n    this.loginService.loginStatusSubjec.asObservable().subscribe(\n      data => {\n        this.isLoggedIn = this.loginService.isLoggedIn();\n        this.user = this.loginService.getUser();\n      }\n    )\n\n    this.service.getIp().toPromise().then((res: any) => {\n      this.ipUsuario = res.ip;\n      console.log(res);\n    })\n    this.obtenerTipoQuejas();\n    this.spinner.hide();\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceEventos.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSourceEventos.paginator) {\n      this.dataSourceEventos.paginator.firstPage();\n    }\n  }\n\n  limpiarFormulario() {\n    this.quejasForm.reset();\n  }\n\n  obtenerTipoQuejas() {\n    this.spinner.show();\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, 'tipoQueja/listar').toPromise().then(data => {\n      this.listaTipoQuejas = data;\n      this.codigo = this.listaTipoQuejas.codigoTipoQueja\n      console.log('wut', this.listaTipoQuejas.codigoEstado);\n      this.dataSourceEventos = new MatTableDataSource(data);\n      this.dataSourceEventos.paginator = this.paginator;\n      this.dataSourceEventos.sort = this.sort;\n      console.log(this.listaTipoQuejas);\n      this.spinner.hide();\n    });\n  }\n\n  guardarTipoQueja(data: any) {\n    this.spinner.show();\n    const queja = {\n      codigoEstado: 1,\n      descripcionTipoQueja: data.descripcionQueja,\n      siglas: data.siglasQueja,\n      usuarioAgrega: this.user.username,\n      ipUsuarioAgrega: this.ipUsuario,\n      fechaAgrega: Number(moment()),\n    }\n    console.log('queja', queja)\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'tipoQueja/crear', queja).toPromise().then(data => {\n      this.spinner.hide();\n      this.obtenerTipoQuejas();\n      this.quejasForm.reset();\n      Swal.fire({\n        titleText: `Su solicitud se ha creado con éxito`,\n        icon: 'success',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    }).catch(err => {\n      console.error(err);\n      this.spinner.hide();\n      Swal.fire({\n        titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n        icon: 'error',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    });\n  }\n\n  obtenerDetalleTipoQueja(id: Number) {\n    this.spinner.show();\n    this.service.getData<any[]>(this.service.BASE_URL_QUEJAS, `tipoQueja/${id}`).toPromise().then(data => {\n      this.detalleQueja = data;\n      console.log(this.detalleQueja);\n      this.quejasForm.get('descripcionQueja')?.setValue(this.detalleQueja.descripcionTipoQueja);\n      this.quejasForm.get('estadoQueja')?.setValue(this.detalleQueja.codigoEstado);\n      this.spinner.hide();\n    });\n  }\n\n  actualizarTipoQueja() {\n    this.spinner.show();\n    const queja = {\n      codigoTipoQueja: this.detalleQueja.codigoTipoQueja,\n      codigoEstado: this.quejasForm.get('estadoQueja')?.value ? 1 : 2,\n      descripcionTipoQueja: this.quejasForm.get('descripcionQueja')?.value,\n      siglas: this.detalleQueja.siglas,\n      usuarioModifica: this.user.username,\n      ipUsuarioModifica: this.ipUsuario,\n      fechaModifica: Number(moment()),\n      fechaAgrega: Number(moment()),\n    }\n    console.log('queja', queja)\n    this.service.postData(this.service.BASE_URL_QUEJAS, 'tipoQueja/modificar/queja', queja).toPromise().then(data => {\n      this.spinner.hide();\n      this.obtenerTipoQuejas();\n      this.quejasForm.reset();\n      Swal.fire({\n        titleText: `Su solicitud se ha modificado con éxito`,\n        icon: 'success',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    }).catch(err => {\n      console.error(err);\n      this.spinner.hide();\n      Swal.fire({\n        titleText: 'Se ha producido un error y no es posible almacenar información, por favor intente más tarde',\n        icon: 'error',\n        showCloseButton: true,\n        showConfirmButton: false,\n        position: 'top'\n      });\n    });\n  }\n\n}\n\n","<div class=\"card-body \">\n  <mat-card-title class=\"titulo\"> Tipo de Queja </mat-card-title>\n\n\n  <!-- Button trigger Ingreso de Informacion -->\n  <button mat-raised-button type=\"button\" class=\"botones mt-4 mb-4\" data-bs-toggle=\"modal\"\n    data-bs-target=\"#staticAgregar\">\n    <mat-icon>add_circle_outline</mat-icon>\n    Queja\n  </button>\n\n</div>\n\n\n<div class=\"container-fluid\">\n  <mat-form-field>\n    <mat-label>Busqueda</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n  </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSourceEventos\" matSort>\n\n      <!-- Column ID punto de atención -->\n      <ng-container matColumnDef=\"codigoTipoQueja\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> ID </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.codigoTipoQueja}} </td>\n      </ng-container>\n\n      <!--Column region de atención-->\n      <ng-container matColumnDef=\"siglas\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Siglas </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.siglas}}</td>\n      </ng-container>\n\n      <!-- Column nombre punto de atención-->\n      <ng-container matColumnDef=\"descripcionTipoQueja\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" mat-sort-header> Nombre punto <br>de Atención </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.descripcionTipoQueja}} </td>\n      </ng-container>\n\n\n\n      <!-- Columna Acción -->\n      <ng-container matColumnDef=\"accion\">\n        <th mat-header-cell *matHeaderCellDef class=\"headerTable\" class=\"headerTable\"> Acción </th>\n        <td mat-cell *matCellDef=\"let evento\" class=\"accion\">\n          <span class=\"material-icons\" title=\"Ver más\" (click)=\"obtenerDetalleTipoQueja(evento.codigoTipoQueja)\"\n            data-bs-toggle=\"modal\" data-bs-target=\"#staticDetalleEventos\" style=\"cursor: pointer;\">visibility</span>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"eventoColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: eventoColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No hay datos correspondientes a \"{{input.value}}\"</td>\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n  </div>\n</div>\n\n<!-- Agregar punto de atención -->\n<div class=\"modal fade\" id=\"staticAgregar\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header titulo\">\n        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Agregar tipo de queja</h5>\n        <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"quejasForm\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <mat-form-field class=\"full-width\" appearance=\"outline\">\n                <mat-label>Siglas de la Queja</mat-label>\n                <input matInput formControlName=\"siglasQueja\" matInput placeholder=\"Siglas de la Queja\" maxlength=\"100\"\n                  autocomplete=\"off\" [textMask]=\"maskconfig\" keepCharPositions=\"false\">\n                <mat-hint align=\"end\">{{quejasForm.controls.siglasQueja.value?.length || 0}}/100</mat-hint>\n                <mat-error *ngIf=\"quejasForm.controls.siglasQueja.hasError('required')\">\n                  Las siglas de la queja es requerido\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-6\">\n              <mat-form-field class=\"full-width\" appearance=\"outline\">\n                <mat-label>Descripción de la Queja</mat-label>\n                <input matInput formControlName=\"descripcionQueja\" matInput placeholder=\"Descripción de la Queja\"\n                  maxlength=\"100\" autocomplete=\"off\">\n                <mat-hint align=\"end\">{{quejasForm.controls.descripcionQueja.value?.length || 0}}/100</mat-hint>\n                <mat-error *ngIf=\"quejasForm.controls.descripcionQueja.hasError('required')\">\n                  La descripción es requerida\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btnCancelar\" (click)=\"limpiarFormulario()\"\n          data-bs-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" data-bs-dismiss=\"modal\" [disabled]=\"quejasForm.invalid\"\n          (click)=\"guardarTipoQueja(quejasForm.value)\" class=\"btn btn-primary\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- Modificar tipo de queja -->\n<div class=\"modal fade\" id=\"staticDetalleEventos\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header titulo\">\n        <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Modificar Tipo de Queja</h1>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"quejasForm\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <mat-form-field class=\"full-width\" appearance=\"outline\">\n                <mat-label>Descripción Queja</mat-label>\n                <input formControlName=\"descripcionQueja\" matInput [value]=\"detalleQueja?.descripcionTipoQueja\"\n                  placeholder=\"Nombre del punto de atención\" maxlength=\"100\" autocomplete=\"off\">\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-10\">\n              <mat-label>Estado</mat-label>\n              <div class=\"col-6\">\n                <mat-slide-toggle color=\"primary\" #estado formControlName=\"estadoQueja\">{{estado.checked? 'Activo' :\n                  'Inactivo'}}</mat-slide-toggle>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"actualizarTipoQueja()\" data-bs-dismiss=\"modal\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}